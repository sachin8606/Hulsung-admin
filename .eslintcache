[{"D:\\Admin Panel\\argon-dashboard-react-master\\src\\index.js":"1","D:\\Admin Panel\\argon-dashboard-react-master\\src\\layouts\\Admin.js":"2","D:\\Admin Panel\\argon-dashboard-react-master\\src\\layouts\\Auth.js":"3","D:\\Admin Panel\\argon-dashboard-react-master\\src\\routes.js":"4","D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Navbars\\AdminNavbar.js":"5","D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Navbars\\AuthNavbar.js":"6","D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Footers\\AdminFooter.js":"7","D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Footers\\AuthFooter.js":"8","D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Sidebar\\Sidebar.js":"9","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\Index.js":"10","D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Headers\\Header.js":"11","D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Headers\\UserHeader.js":"12","D:\\Admin Panel\\argon-dashboard-react-master\\src\\variables\\charts.js":"13","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Icons.js":"14","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Profile.js":"15","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Categories.js":"16","D:\\Admin Panel\\argon-dashboard-react-master\\src\\assets\\my-jquery.js":"17","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Pagination.js":"18","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Products.js":"19","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Users.js":"20","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Vendors.js":"21","D:\\Admin Panel\\argon-dashboard-react-master\\src\\myModules\\jsontographql.js":"22","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Vendors\\VendorStruct.js":"23","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Product\\EditProduct.js":"24","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\RootCategories\\EditRootCategory.js":"25","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\RootCategories\\CategoryStruct.js":"26","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\RootCategories\\Addrootcategory.js":"27","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Product\\AddProduct.js":"28","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Product\\ProductStruct.js":"29","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Users\\UserStruct.js":"30","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Vendors\\AddVendor.js":"31","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Users\\AddUser.js":"32"},{"size":1341,"mtime":1626009525797,"results":"33","hashOfConfig":"34"},{"size":2404,"mtime":1624625410957,"results":"35","hashOfConfig":"34"},{"size":3254,"mtime":1611671497000,"results":"36","hashOfConfig":"34"},{"size":3586,"mtime":1632541541950,"results":"37","hashOfConfig":"34"},{"size":4079,"mtime":1611671497000,"results":"38","hashOfConfig":"39"},{"size":3648,"mtime":1611671497000,"results":"40","hashOfConfig":"34"},{"size":2724,"mtime":1611671497000,"results":"41","hashOfConfig":"39"},{"size":2763,"mtime":1623607218863,"results":"42","hashOfConfig":"34"},{"size":9591,"mtime":1624625361591,"results":"43","hashOfConfig":"34"},{"size":11696,"mtime":1623648066313,"results":"44","hashOfConfig":"34"},{"size":6063,"mtime":1611671497000,"results":"45","hashOfConfig":"34"},{"size":1978,"mtime":1623940525825,"results":"46","hashOfConfig":"34"},{"size":10727,"mtime":1611671497000,"results":"47","hashOfConfig":"34"},{"size":113275,"mtime":1611671497000,"results":"48","hashOfConfig":"34"},{"size":12512,"mtime":1611671497000,"results":"49","hashOfConfig":"34"},{"size":4825,"mtime":1625835112641,"results":"50","hashOfConfig":"34"},{"size":156,"mtime":1623733428775,"results":"51","hashOfConfig":"39"},{"size":1551,"mtime":1626522296887,"results":"52","hashOfConfig":"34"},{"size":4592,"mtime":1625835123765,"results":"53","hashOfConfig":"34"},{"size":4688,"mtime":1626104472965,"results":"54","hashOfConfig":"34"},{"size":4348,"mtime":1626522273053,"results":"55","hashOfConfig":"34"},{"size":611,"mtime":1625410192110,"results":"56","hashOfConfig":"34"},{"size":1857,"mtime":1626502911354,"results":"57","hashOfConfig":"34"},{"size":52192,"mtime":1625923245791,"results":"58","hashOfConfig":"34"},{"size":11758,"mtime":1626502506753,"results":"59","hashOfConfig":"34"},{"size":1840,"mtime":1625813507181,"results":"60","hashOfConfig":"34"},{"size":9220,"mtime":1626069889177,"results":"61","hashOfConfig":"34"},{"size":34893,"mtime":1626017678911,"results":"62","hashOfConfig":"34"},{"size":2015,"mtime":1625812410595,"results":"63","hashOfConfig":"34"},{"size":1979,"mtime":1626097784542,"results":"64","hashOfConfig":"34"},{"size":17894,"mtime":1626506515160,"results":"65","hashOfConfig":"34"},{"size":8931,"mtime":1634209072070,"results":"66","hashOfConfig":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n1bnv3",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"193qthz",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},"D:\\Admin Panel\\argon-dashboard-react-master\\src\\index.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\layouts\\Admin.js",["138"],"/*!\n\n=========================================================\n* Argon Dashboard React - v1.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { useLocation, Route, Switch, Redirect } from \"react-router-dom\";\n// reactstrap components\nimport { Container } from \"reactstrap\";\n// core components\n\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\n\nimport routes from \"routes.js\";\n\nconst Admin = (props) => {\n  const mainContent = React.useRef(null);\n  const location = useLocation();\n\n  React.useEffect(() => {\n    document.documentElement.scrollTop = 0;\n    document.scrollingElement.scrollTop = 0;\n    mainContent.current.scrollTop = 0;\n  }, [location]);\n\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  const getBrandText = (path) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        props.location.pathname.indexOf(routes[i].layout + routes[i].path) !==\n        -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n\n  return (\n    <>\n      <Sidebar\n        {...props}\n        routes={routes}\n        logo={{\n          innerLink: \"/admin/index\",\n          imgSrc: require(\"../assets/img/brand/argon-react.png\").default,\n          imgAlt: \"...\",\n        }}\n      />\n      <div className=\"main-content\" ref={mainContent}>\n        {/* <AdminNavbar\n          {...props}\n          brandText={getBrandText(props.location.pathname)}\n        /> */}\n        <Switch>\n          {getRoutes(routes)}\n          <Redirect from=\"*\" to=\"/admin/index\" />\n        </Switch>\n        <Container fluid>\n      \n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Admin;\n","D:\\Admin Panel\\argon-dashboard-react-master\\src\\layouts\\Auth.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\routes.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Navbars\\AdminNavbar.js",[],["139","140"],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Navbars\\AuthNavbar.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Footers\\AdminFooter.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Footers\\AuthFooter.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Sidebar\\Sidebar.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\Index.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Headers\\Header.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\components\\Headers\\UserHeader.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\variables\\charts.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Icons.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Profile.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Categories.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\assets\\my-jquery.js",["141","142"],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Pagination.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Products.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Users.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\sidebar_components\\Vendors.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\myModules\\jsontographql.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Vendors\\VendorStruct.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Product\\EditProduct.js",["143","144","145","146","147"],"import React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle,Row, Col, UncontrolledCollapse, CardBody, ListGroup, ListGroupItem, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input, Table } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState} from 'draft-js'\r\nimport { stateToHTML  } from 'draft-js-export-html';\r\nimport { stateFromHTML} from 'draft-js-import-html';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport Switch from 'react-switch';\r\nimport axios from 'axios';\r\nimport { JSONtographql } from 'myModules/jsontographql';\r\nimport img from '../../../assets/img/brand/blue.png'\r\n\r\nconst EditProduct = (props) => {\r\n\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  const [SKU, setSKU] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [description, setDescription] = useState(EditorState.createEmpty())\r\n  const [shortdescription, setshortDescription] = useState(EditorState.createEmpty())\r\n  const [rating, setRating] = useState(\"\");\r\n  const [ratingCount, setRatingCount] = useState(\"\");\r\n  const [switchProductStatus, switchProductstatechange] = useState(false);\r\n  const [productTaxClass, setproductTaxClass] = useState();\r\n  const [urlKey, setUrlKey] = useState(\"\");\r\n  const [manufacturerCountry, setManufacturerCountry] = useState(\"\");\r\n  const [featureProductState, switchFeatureProductchange] = useState(false);\r\n  const [manufacturer, setManufacturer] = useState(\"\");\r\n  const [deliveryTime, setDeliveryTime] = useState(\"\");\r\n  const [shippingCharges, setShippingCharges] = useState(\"\");\r\n  const [CodAvailability, switchSetCodAvailability] = useState(false);\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [gst, setGst] = useState(\"\");\r\n  const [specialPrice, setSpecialPrice] = useState(\"\");\r\n\r\n  const [actualPrice, setActualPrice] = useState(\"\");\r\n  const [metaTitle, setMetaTitle] = useState(\"\");\r\n  const [metaKeywords, setMetaKeywords] = useState(\"\");\r\n  const [metadescription, setmetaDescription] = useState(\"\");\r\n  const [mkeyword, setmkeyword] = useState([]);\r\n  const [images, setImage] = useState();\r\n  const [videos, setVideo] = useState(\"\");\r\n  const [videoarray, setvideoarray] = useState([]);\r\n  const [label, setLabel] = useState(\"\");\r\n  const [purchasePrice, setPurchasePrice] = useState(\"\");\r\n  const [updatedat, setDate] = useState(new Date());\r\n  const [stock, setStock] = useState(\"\");\r\n\r\n  const [vendortaxClass, setVendorTaxClass] = useState(\"\");\r\n  const [paymentType, setPaymentType] = useState(\"\");\r\n\r\n\r\n  const [thumbnail, setThumbnail] = useState(false);\r\n  const [smallImage, setSmallImage] = useState(false);\r\n  const [baseImage, setBaseImage] = useState(false);\r\n  const [thumbImage, setthumbImage] = useState(\"\");\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isvActive, setisvActive] = useState(false);\r\n  const [isLoanAvailable, setisLoanAvailable] = useState(false);\r\n  const [vendorSearched, setSearchedVendorName] = useState(\"\");\r\n  const [searchedVendorsList, setSearchedVendorsList] = useState(\"\");\r\n  const [isActiveVendor, setisActiveVendor] = useState(false);\r\n  const [vendorArray, setSelectedVendor] = useState([]);\r\n  const [ImageArray, setImageArray] = useState([]);\r\n\r\n\r\n\r\n  // Modal for Image Editing\r\n\r\n\r\n  const toggleModalFun = () => setModal(!modal);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const [indexOfcurrentImageEdit, setindexOfcurrentImageEdit] = useState();\r\n  const [nameofCurrentImage, setnameofCurrentImage] = useState();\r\n\r\n\r\n\r\n  // Modal for Vendor Editing\r\n\r\n  const toggleModalFunVendor = () => setvendormodal(!vendormodal);\r\n  const [vendormodal, setvendormodal] = useState(false);\r\n  \r\n\r\n  const [indexofCurrentVendor, setindexofCurrentVendor] = useState();\r\n  const [headcurrentVendorEditing, setheadcurrentVendorEditing] = useState();\r\n\r\n\r\n  //   For editing state of particular image\r\n\r\n  const [pbaseImage, psetBaseImage] = useState();\r\n  const [psmallImage, psetSmallImage] = useState();\r\n  const [pthumbnail, psetThumbnail] = useState();\r\n  const [pthumbImage, psetthumbImage] = useState(\"\");\r\n  const [plabel, psetLabel] = useState(\"\");\r\n  const [pisVisible, psetIsVisible] = useState();\r\n\r\n\r\n\r\n  // For editing state of particular vendor\r\n\r\n  const [pvendortaxClass, psetVendorTaxClass] = useState(\"\");\r\n  const [pisActiveVendor, psetisActiveVendor] = useState();\r\n  const [pupdatedat, psetDate] = useState(new Date());\r\n  const [pstock, psetStock] = useState(\"\");\r\n  const [ppurchasePrice, psetPurchasePrice] = useState(\"\");\r\n  const [pisvActive, psetisvActive] = useState();\r\n\r\n  // vendor_id: id,\r\n  // purchase_price: parseInt(purchasePrice),\r\n  // updated_at: updatedat,\r\n  // stock: parseInt(stock),\r\n  // active: isActiveVendor,\r\n  // vActive: isvActive,\r\n  // taxClass: parseInt(vendortaxClass)\r\n\r\n\r\n  useEffect(() => {\r\n    axios.post(`http://localhost:4000/graphql?query={\r\n        getproductDetails(SKU:\"${props.match.params.SKU}\"){\r\n        SKU\r\n        productName\r\n        description\r\n        shortDescription\r\n        rating\r\n        ratingCount\r\n        status\r\n        urlKey\r\n        manufacturerCountry\r\n        featureProduct\r\n        manufacturer\r\n        metaKeywords\r\n        deliveryTime\r\n        shippingCharges\r\n        codAvailable\r\n        quantity\r\n        price\r\n        gst\r\n        specialPrice\r\n        displayActualPrice\r\n        taxClass\r\n        metaTitle\r\n        metaDescription\r\n        loan_available\r\n        payment_type\r\n        vendors{\r\n            vendor_id\r\n            purchase_price\r\n            vActive\r\n            updated_at\r\n            stock\r\n            active\r\n            taxClass\r\n        }\r\n        images{\r\n            image\r\n            baseImage\r\n            smallImage\r\n            thumbnail\r\n            thumbImage\r\n            label\r\n            visible\r\n        }\r\n        videos\r\n        }\r\n      }`).then((result) => {\r\n        var details;\r\n      details = result.data.data.getproductDetails;\r\n      setValues(details);\r\n    });\r\n  }, [])\r\n\r\n\r\n \r\n\r\n\r\n  function setValues(d) {\r\n    setSKU(d.SKU);\r\n    setProductName(d.productName);\r\n    setshortDescription(EditorState.createWithContent(stateFromHTML(d.shortDescription)))\r\n    setDescription(EditorState.createWithContent(stateFromHTML(d.description)));\r\n    setRating(d.rating);\r\n    setRatingCount(d.ratingCount);\r\n    switchProductstatechange(d.status);\r\n    setUrlKey(d.urlKey);\r\n    setManufacturer(d.manufacturer);\r\n    setManufacturerCountry(d.manufacturerCountry);\r\n    switchFeatureProductchange(d.featureProduct);\r\n    setDeliveryTime(d.deliveryTime);\r\n    setShippingCharges(d.shippingCharges);\r\n    switchSetCodAvailability(d.codAvailable);\r\n    setQuantity(d.quantity);\r\n    setPrice(d.price);\r\n    setGst(d.gst);\r\n    setSpecialPrice(d.specialPrice);\r\n    setActualPrice(d.displayActualPrice);\r\n    setproductTaxClass(d.taxClass);\r\n    setMetaTitle(d.metaTitle);\r\n    setmetaDescription(d.metaDescription);\r\n    setisLoanAvailable(d.loan_available)\r\n    setPaymentType(d.payment_type)\r\n    setmkeyword(d.metaKeywords);\r\n    setvideoarray(d.videos);\r\n    setImageArray(d.images);\r\n    setSelectedVendor(d.vendors)\r\n  }\r\n\r\n  //   General Information related\r\n\r\n  const switchSetProductStatus = () => {\r\n    if (switchProductStatus === false) {\r\n      switchProductstatechange(true)\r\n\r\n    }\r\n    else {\r\n      switchProductstatechange(false)\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // metakeywords array\r\n\r\n\r\n\r\n\r\n  function pushmetaKeyword() {\r\n    setmkeyword(mkeyword => [...mkeyword, metaKeywords])\r\n    setMetaKeywords()\r\n  }\r\n\r\n\r\n  function deleteselectedmetakeywords(index) {\r\n    for (let i = 0; i < mkeyword.length; i++) {\r\n      if (index === i) {\r\n        mkeyword.splice(index, 1)\r\n        const newmetaKeywordArray = [...mkeyword]\r\n        setmkeyword(newmetaKeywordArray)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setmkeyword(mkeyword)\r\n  }, [mkeyword])\r\n\r\n\r\n\r\n  // Manufacturer page related\r\n\r\n  const switchSetFeatureProduct = () => {\r\n    if (featureProductState === false) {\r\n      switchFeatureProductchange(true)\r\n\r\n    }\r\n    else {\r\n      switchFeatureProductchange(false)\r\n\r\n    }\r\n  }\r\n\r\n\r\n  // Shipping Details related\r\n\r\n  const SetCodAvailability = () => {\r\n    if (CodAvailability === false) {\r\n      switchSetCodAvailability(true)\r\n    }\r\n    else {\r\n      switchSetCodAvailability(false);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Image/Video Related functions\r\n\r\n\r\n  // Images\r\n\r\n\r\n  const switchThumbNail = () => {\r\n    if (thumbnail === false) {\r\n      setThumbnail(true);\r\n    }\r\n    else {\r\n      setThumbnail(false)\r\n    }\r\n  }\r\n\r\n\r\n  const switchBaseImage = () => {\r\n    if (baseImage === false) {\r\n      setBaseImage(true)\r\n    }\r\n    else {\r\n      setBaseImage(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const switchSmallImage = () => {\r\n    if (smallImage === false) {\r\n      setSmallImage(true)\r\n    }\r\n    else {\r\n      setSmallImage(false)\r\n    }\r\n  }\r\n\r\n\r\n  const switchVisible = () => {\r\n    if (isVisible === false) {\r\n      setIsVisible(true)\r\n    }\r\n    else {\r\n      setIsVisible(false)\r\n    }\r\n  }\r\n\r\n\r\n  const setImg = (e) => {\r\n    var file = e.target.files[0];\r\n    setImage(file.name);\r\n    var oFReader = new FileReader();\r\n    oFReader.readAsDataURL(file);\r\n\r\n    oFReader.onload = function (oFREvent) {\r\n      document.getElementById(\"uploadPreview\").src = oFREvent.target.result;\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n  function addtolistImages() {\r\n    setImageArray(ImageArray => [...ImageArray,\r\n    {\r\n      image: images,\r\n      baseImage: baseImage,\r\n      smallImage: smallImage,\r\n      thumbnail: thumbnail,\r\n      thumbImage: thumbImage,\r\n      label: label,\r\n      visible: isVisible\r\n    }]);\r\n    setBaseImage(false);\r\n    setSmallImage(false)\r\n    setThumbnail(false)\r\n    setthumbImage(\"\")\r\n    setLabel(\"\")\r\n    setIsVisible(false)\r\n  }\r\n\r\n\r\n\r\n\r\n  // delete image from selected images list \r\n\r\n\r\n\r\n  function delselectedImage(id) {\r\n    for (let i = 0; i < ImageArray.length; i++) {\r\n      if (id === i) {\r\n        ImageArray.splice(id, 1)\r\n        const newImageArray = [...ImageArray]\r\n        setImageArray(newImageArray)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setImageArray(ImageArray)\r\n  }, [ImageArray])\r\n\r\n\r\n\r\n  // Upload extra images to server\r\n\r\n  function uploadProductImage(e){\r\n    e.preventDefault();\r\n    addtolistImages();\r\n    const formData = new FormData();\r\n    var file = document.getElementById('productimage').files[0];\r\n    formData.append('file',file)\r\n    axios({\r\n      method: 'post',\r\n      url: 'http://127.0.0.1:4000/uploadproductImages',\r\n      data: formData,\r\n    }).then((response)=>{\r\n    }).catch((e)=>{\r\n      alert(e)\r\n    })\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Video\r\n\r\n  const handleVideoChange = (e) => {\r\n    setVideo(\"https://www.youtube.com/embed/\" + e.target.value)\r\n  }\r\n\r\n\r\n\r\n\r\n  function pushVideo() {\r\n    setvideoarray(videoarray => [...videoarray, videos])\r\n  }\r\n\r\n  function delselectedvideos(index) {\r\n    for (let i = 0; i < videoarray.length; i++) {\r\n      if (i === index) {\r\n        videoarray.splice(index, 1)\r\n        const newvideosArray = [...videoarray];\r\n        setvideoarray(newvideosArray);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setvideoarray(videoarray)\r\n  }, [videoarray])\r\n\r\n\r\n\r\n\r\n\r\n  // Vendor Related\r\n\r\n\r\n\r\n  function searchVendor() {\r\n    axios.post(`http://localhost:4000/graphql?query={\r\n      searchVendors(tag:\"${vendorSearched}\"){\r\n       id\r\n       name\r\n       email\r\n       active\r\n      }\r\n    }`).then((result) => {\r\n      setSearchedVendorsList(result.data.data.searchVendors)\r\n    });\r\n  }\r\n\r\n\r\n  function switchvActive() {\r\n    if (isvActive === false) {\r\n      setisvActive(true)\r\n    }\r\n    else {\r\n      setisvActive(false)\r\n    }\r\n  }\r\n\r\n\r\n  function pushVendor(id) {\r\n    if (purchasePrice === \"\" && stock === \"\" && vendortaxClass === \"\") {\r\n      alert(\"First fill in all the fields then select vendor\")\r\n    }\r\n    else {\r\n      setSelectedVendor(vendorArray => [...vendorArray,\r\n      {\r\n        vendor_id: id,\r\n        purchase_price: parseInt(purchasePrice),\r\n        updated_at: updatedat,\r\n        stock: parseInt(stock),\r\n        active: isActiveVendor,\r\n        vActive: isvActive,\r\n        taxClass: parseInt(vendortaxClass)\r\n\r\n      }]\r\n      )\r\n      setVendorTaxClass(\"\");\r\n      setPurchasePrice(\"\");\r\n      setDate(\"\");\r\n      setStock(\"\");\r\n      setisActiveVendor(false);\r\n      setisvActive(false);\r\n    }\r\n  }\r\n\r\n\r\n  function switchActiveVendor() {\r\n    if (isActiveVendor === false) {\r\n      setisActiveVendor(true)\r\n    }\r\n    else {\r\n      setisActiveVendor(false)\r\n    }\r\n  }\r\n\r\n\r\n  // Remove selected vendors from list\r\n\r\n\r\n  function deleteselectedvendors(index) {\r\n    for (let i = 0; i < vendorArray.length; i++) {\r\n      if (i === index) {\r\n        vendorArray.splice(index, 1)\r\n        const newVendorArray = [...vendorArray]\r\n        setSelectedVendor(newVendorArray);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSelectedVendor(vendorArray)\r\n  }, [vendorArray])\r\n\r\n\r\n\r\n\r\n\r\n  // Other Information related \r\n\r\n\r\n  const switchSetLoanAvailablity = () => {\r\n    if (isLoanAvailable === false) {\r\n      setisLoanAvailable(true)\r\n    }\r\n    else {\r\n      setisLoanAvailable(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  // Modal For Images\r\n\r\n\r\n  const pswitchThumbNail = () => {\r\n    if (pthumbnail === false) {\r\n      psetThumbnail(true);\r\n    }\r\n    else {\r\n      psetThumbnail(false)\r\n    }\r\n  }\r\n\r\n\r\n  const pswitchBaseImage = () => {\r\n    if (pbaseImage === false) {\r\n      psetBaseImage(true)\r\n    }\r\n    else {\r\n      psetBaseImage(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const pswitchSmallImage = () => {\r\n    if (psmallImage === false) {\r\n      psetSmallImage(true)\r\n    }\r\n    else {\r\n      psetSmallImage(false)\r\n    }\r\n  };\r\n\r\n\r\n  const pswitchVisible = () => {\r\n    if (pisVisible === false) {\r\n      psetIsVisible(true)\r\n    }\r\n    else {\r\n      psetIsVisible(false)\r\n    }\r\n  };\r\n\r\n\r\n  function editParticular(i) {\r\n    setindexOfcurrentImageEdit(i)\r\n    setnameofCurrentImage(ImageArray[i].image);\r\n    setModal(true)\r\n    psetBaseImage(ImageArray[i].baseImage);\r\n    psetIsVisible(ImageArray[i].visible)\r\n    psetLabel(ImageArray[i].label)\r\n    psetSmallImage(ImageArray[i].smallImage)\r\n    psetThumbnail(ImageArray[i].thumbnail)\r\n    psetthumbImage(ImageArray[i].thumbImage)\r\n  }\r\n\r\n  function updateParticularImage() {\r\n    for (let i = 0; i < ImageArray.length; i++) {\r\n      if (i === indexOfcurrentImageEdit) {\r\n        ImageArray[i].baseImage = pbaseImage;\r\n        ImageArray[i].smallImage = psmallImage;\r\n        ImageArray[i].thumbImage = pthumbImage;\r\n        ImageArray[i].thumbnail = pthumbnail;\r\n        ImageArray[i].label = plabel;\r\n        ImageArray[i].visible = pisVisible;\r\n      }\r\n    }\r\n    setImageArray(ImageArray)\r\n    showSuccessAlertImage()\r\n  }\r\n\r\n\r\n\r\n\r\n  // Modal for Vendors\r\n\r\n\r\n\r\n  function pswitchvActive() {\r\n    if (pisvActive === false) {\r\n      psetisvActive(true)\r\n    }\r\n    else {\r\n      psetisvActive(false)\r\n    }\r\n  }\r\n\r\n\r\n  \r\n  function pswitchActiveVendor() {\r\n    if (pisActiveVendor === false) {\r\n      psetisActiveVendor(true)\r\n    }\r\n    else {\r\n      psetisActiveVendor(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n function editParticularVendor(i){\r\n   setindexofCurrentVendor(i)\r\n   setheadcurrentVendorEditing(vendorArray[i].vendor_id)\r\n   setvendormodal(true);\r\n   psetDate(vendorArray[i].updated_at)\r\n   psetPurchasePrice(vendorArray[i].purchase_price)\r\n   psetStock(vendorArray[i].stock)\r\n   psetisActiveVendor(vendorArray[i].active)\r\n   psetisvActive(vendorArray[i].vActive)\r\n   psetVendorTaxClass(vendorArray[i].taxClass)\r\n }\r\n\r\n  function updateParticularVendor(){\r\n    for (let i = 0; i < vendorArray.length; i++) {\r\n      if (i === indexofCurrentVendor) {\r\n        vendorArray[i].active = pisActiveVendor;\r\n        vendorArray[i].vActive = pisvActive;\r\n        vendorArray[i].updated_at = pupdatedat;\r\n        vendorArray[i].stock = parseInt(pstock);\r\n        vendorArray[i].taxClass = parseInt(pvendortaxClass);\r\n        vendorArray[i].purchase_price = parseInt(ppurchasePrice);\r\n      }\r\n    }\r\n    setSelectedVendor(vendorArray)\r\n    showSuccessAlertVendor();\r\n  }\r\n\r\n\r\n\r\n\r\n// Success ALert For Modals\r\n\r\n\r\n  function showSuccessAlertImage(){\r\n    var ele = document.getElementById(\"hidesuccessAlertModalImage\");\r\n    setModal(!modal);\r\n    ele.removeAttribute('id');\r\n    ele.classList.add(\"showsuccessAlertModalImage\");\r\n    setTimeout(()=>{\r\n      ele.removeAttribute('class');\r\n      ele.setAttribute('id',\"hidesuccessAlertModalImage\")\r\n    },3600)\r\n  }\r\n\r\n\r\n  function showSuccessAlertVendor(){\r\n    var ele = document.getElementById(\"hidesuccessAlertModalVendor\");\r\n    setvendormodal(!vendormodal);\r\n    ele.removeAttribute('id');\r\n    ele.classList.add(\"showsuccessAlertModalVendor\");\r\n    setTimeout(()=>{\r\n      ele.removeAttribute('class');\r\n      ele.setAttribute('id',\"hidesuccessAlertModalVendor\")\r\n    },3500)\r\n  }\r\n\r\n\r\n\r\n\r\n  // Save Product\r\n\r\n\r\n  const updateProduct = () => {\r\n\r\n\r\n    var finalDescription = encodeURIComponent(stateToHTML(description.getCurrentContent()).replace(/\\r?\\n|\\r/g,\"\"));\r\n    \r\n    var finalShortDescription = encodeURIComponent(stateToHTML(shortdescription.getCurrentContent()).replace(/\\r?\\n|\\r/g,\"\"))\r\n\r\n    for (let i = 0; i < mkeyword.length; i++) {\r\n      mkeyword[i] = JSON.stringify(mkeyword[i])\r\n      setmkeyword(mkeyword);\r\n    }\r\n\r\n    for (let i = 0; i < videoarray.length; i++) {\r\n      videoarray[i] = JSON.stringify(videoarray[i])\r\n      setvideoarray(videoarray);\r\n    }\r\n  \r\n\r\n\r\n    axios.post(`http://localhost:4000/graphql?query=mutation{\r\n        updateProduct(\r\n          SKU: \"${SKU}\",\r\n          productName:\"${productName}\",\r\n          description:\"${finalDescription}\" ,\r\n          shortDescription: \"${finalShortDescription}\",\r\n          rating: ${rating},\r\n          ratingCount: ${ratingCount},\r\n          status: ${switchProductStatus},\r\n          urlKey: \"${urlKey}\",\r\n          manufacturerCountry: \"${manufacturerCountry}\",\r\n          featureProduct: ${featureProductState},\r\n          manufacturer: \"${manufacturer}\",\r\n          deliveryTime: \"${deliveryTime}\",\r\n          shippingCharges: ${shippingCharges},\r\n          codAvailable: ${CodAvailability},\r\n          quantity: ${quantity},\r\n          price: ${price},\r\n          gst: ${gst},\r\n          specialPrice: ${specialPrice},\r\n          displayActualPrice: ${actualPrice},\r\n          taxClass: ${productTaxClass},\r\n          metaTitle: \"${metaTitle}\",\r\n          metaKeywords: [${mkeyword}],\r\n          metaDescription: \"${metadescription}\",\r\n      \r\n          images:${JSONtographql(ImageArray)}, \r\n          videos:[${videoarray}],\r\n          vendors:${JSONtographql(vendorArray)},\r\n          loan_available: ${isLoanAvailable},\r\n          payment_type:\"${paymentType}\"\r\n        ),{\r\n          SKU\r\n        }\r\n}`).then((result) => {\r\n      if (result.status === 200) {\r\n        var ele =  document.getElementById(\"alertBoxhide\");\r\n        ele.setAttribute('id','alertBoxshow')\r\n         setTimeout(function(){ \r\n           ele.setAttribute('id','alertBoxhide')\r\n           callonUpdate();\r\n          }, 2000);\r\n      }\r\n    }).catch(err => alert(err))\r\n  }\r\n\r\n\r\n  function callonUpdate() {\r\n    axios.post(`http://localhost:4000/graphql?query={\r\n        getproductDetails(SKU:\"${props.match.params.SKU}\"){\r\n        SKU\r\n        productName\r\n        description\r\n        shortDescription\r\n        rating\r\n        ratingCount\r\n        status\r\n        urlKey\r\n        manufacturerCountry\r\n        featureProduct\r\n        manufacturer\r\n        metaKeywords\r\n        deliveryTime\r\n        shippingCharges\r\n        codAvailable\r\n        quantity\r\n        price\r\n        gst\r\n        specialPrice\r\n        displayActualPrice\r\n        taxClass\r\n        metaTitle\r\n        metaDescription\r\n        loan_available\r\n        payment_type\r\n        vendors{\r\n            vendor_id\r\n            purchase_price\r\n            vActive\r\n            updated_at\r\n            stock\r\n            active\r\n            taxClass\r\n        }\r\n        images{\r\n            image\r\n            baseImage\r\n            smallImage\r\n        }\r\n        videos\r\n        }\r\n      }`).then((result) => {\r\n        var d;\r\n      d = result.data.data.getproductDetails;\r\n      setValues(d);\r\n    });\r\n  }\r\n\r\n  function setdefault() {\r\n    setSKU(\"\");\r\n    setProductName(\"\");\r\n    // setDescription(\"\");\r\n    // setshortDescription(\"\");\r\n    setRating(\"\");\r\n    setRatingCount(\"\");\r\n    switchSetProductStatus(false);\r\n    setUrlKey(\"\");\r\n    setManufacturer(\"\");\r\n    setManufacturerCountry(\"\");\r\n    switchSetFeatureProduct(false);\r\n    setDeliveryTime(\"\");\r\n    setShippingCharges(\"\");\r\n    SetCodAvailability(\"\");\r\n    setQuantity(\"\");\r\n    setPrice(\"\");\r\n    setGst(\"\");\r\n    setSpecialPrice(\"\");\r\n    setActualPrice(\"\");\r\n    setproductTaxClass(\"\");\r\n    setMetaTitle(\"\");\r\n    setmetaDescription(\"\");\r\n    setisLoanAvailable(false)\r\n    setPaymentType(\"\")\r\n    setmkeyword([]);\r\n    setvideoarray([]);\r\n    setImageArray([]);\r\n    setSelectedVendor([])\r\n  }\r\n\r\n\r\n  return (\r\n\r\n\r\n    <div>\r\n\r\n      \r\n        {/* Modals Images and Vendors Success Alert */}\r\n\r\n        <div id=\"hidesuccessAlertModalImage\">\r\n        <i className=\"ni ni-check-bold imodalsuccessicon\" ></i>\r\n        Record updated! Click on the final update button.\r\n      </div>\r\n\r\n\r\n           {/* Modals Images and Vendors Success Alert */}\r\n\r\n           <div id=\"hidesuccessAlertModalVendor\">\r\n        <i className=\"ni ni-check-bold imodalsuccessicon\"></i>\r\n        Record updated! Click on the final update button.\r\n      </div>     \r\n\r\n\r\n\r\n\r\n        {/* Modal for PArticular Image Editing */}\r\n\r\n\r\n\r\n      <div id=\"containEditImagesModal\">\r\n        <Modal isOpen={modal} fade={false} toggle={toggleModalFun}>\r\n          <ModalHeader toggle={toggleModalFun}>Edit Image Details:- {nameofCurrentImage}</ModalHeader>\r\n          <ModalBody>\r\n            <Row>\r\n              <Col sm=\"12\">\r\n                <Card body>\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <CardTitle tag=\"h3\">Image Upload</CardTitle>\r\n                      <img id=\"uploadPreview\" style={{ width: \"100px\", height: \"100px\" }} alt=\"preview\" src={'http://127.0.0.1:4000/'+nameofCurrentImage}/>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <FormGroup>\r\n                        <Label className=\"form-control-label\">Base Image</Label>\r\n                        <br />\r\n                        <Switch onChange={pswitchBaseImage} checked={pbaseImage} />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <FormGroup>\r\n                        <Label className=\"form-control-label\">Small Image</Label>\r\n                        <br />\r\n                        <Switch onChange={pswitchSmallImage} checked={psmallImage} />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"3\">\r\n                      <FormGroup>\r\n                        <Label className=\"form-control-label\">Thumbnail</Label>\r\n                        <br />\r\n                        <Switch onChange={pswitchThumbNail} checked={pthumbnail} />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Form className=\"form21\">\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Thumb Image</Label>\r\n                          <Input type=\"text\" value={pthumbImage} onChange={(e) => psetthumbImage(e.target.value)} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Label</Label>\r\n                          <Input type=\"text\" value={plabel} onChange={(e) => psetLabel(e.target.value)} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Visible</Label>\r\n                          <br />\r\n                          <Switch onChange={pswitchVisible} checked={pisVisible} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\" style={{ margin: \"auto\" }}>\r\n                        <Button className=\"btn-block\" size=\"sm\" outline color=\"primary\" type=\"button\" onClick={() => updateParticularImage()}>\r\n                          Update\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n\r\n\r\n\r\n\r\n                                                  \r\n                                                      {/* Modal For particular vendors Editing */}\r\n\r\n      \r\n      \r\n      \r\n      <div id=\"containEditImagesModal\">\r\n           <Modal isOpen={vendormodal} fade={false} toggle={toggleModalFunVendor}>                           \r\n       <ModalHeader toggle={toggleModalFunVendor}>Edit Vendor Details:-  {headcurrentVendorEditing}</ModalHeader>\r\n          <ModalBody>\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Purchase Price</Label>\r\n                  <Input type=\"number\" value={ppurchasePrice} onChange={(e) => psetPurchasePrice(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Updated at</Label>\r\n                  <Input type=\"date\" value={pupdatedat} onChange={(e) => psetDate(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Stock</Label>\r\n                  <Input type=\"number\" value={pstock} onChange={(e) => psetStock(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Active</Label>\r\n                  <br />\r\n                  <Switch onChange={pswitchActiveVendor} checked={pisActiveVendor} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">vActive</Label>\r\n                  <br />\r\n                  <Switch onChange={pswitchvActive} checked={pisvActive} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Tax Class</Label>\r\n                  <Input type=\"number\" value={pvendortaxClass} onChange={(e) => psetVendorTaxClass(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\" style={{ margin: \"auto\" }}>\r\n                    <Button className=\"btn-block\" size=\"sm\" outline color=\"primary\" type=\"button\" onClick={() => updateParticularVendor()}>\r\n                      Update\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n          </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n\r\n\r\n                                                        {/* Success Alert Box */}\r\n\r\n\r\n\r\n      <div id=\"alertBoxhide\">\r\n        <p className=\"alertMessage\">Updated successfully...</p>\r\n      </div>\r\n\r\n\r\n\r\n      \r\n      <Nav tabs>\r\n\r\n        {/*  1 nav item */}\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            General Information\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n        {/* 2 nav item */}\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Manu. Information\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n        {/* 3 nav item */}\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Shipping Details\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n\r\n        {/* 4 nav item */}\r\n\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            Meta Information\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n\r\n\r\n        {/* 5 nav item */}\r\n\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '5' })}\r\n            onClick={() => { toggle('5'); }}\r\n          >\r\n            Images/Videos\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n\r\n        {/* 6 nav item */}\r\n\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '6' })}\r\n            onClick={() => { toggle('6'); }}\r\n          >\r\n            Vendors\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n\r\n        {/* 7 nav item */}\r\n\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '7' })}\r\n            onClick={() => { toggle('7'); }}\r\n          >\r\n            Other\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n\r\n\r\n      {/* 1 content   -   General Information */}\r\n\r\n\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n          <Form className=\"form21\">\r\n            <Row form>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\" for=\"exampleSKU\">SKU</Label>\r\n                  <Input type=\"text\" value={SKU} onChange={(e) => setSKU(e.target.value)} name=\"SKU\" id=\"examplesSKU\" />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\" for=\"Name\">Product Name</Label>\r\n                  <Input type=\"text\" value={productName} name=\"name\" id=\"ProductName\" onChange={(e) => setProductName(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Status</Label>\r\n                  <br />\r\n                  <Switch onChange={switchSetProductStatus} checked={switchProductStatus} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\" >URL Key</Label>\r\n                  <Input type=\"text\" value={urlKey} onChange={(e) => setUrlKey(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Rating</Label>\r\n                  <Input type=\"number\" value={rating} onChange={(e) => setRating(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\" >Rating Count</Label>\r\n                  <Input type=\"number\" value={ratingCount} onChange={(e) => setRatingCount(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* <Button onClick={() => show()}>Sign in</Button> */}\r\n          </Form>\r\n\r\n\r\n          {/* Editor */}\r\n\r\n          <div>\r\n\r\n            <div id=\"addProductEditorshortdescription\">\r\n              <Label className=\"form-control-label\" for=\"exampleCheck\" check>Short Description</Label>\r\n              <br />\r\n\r\n              <Editor editorState={shortdescription}\r\n                wrapperClassName=\"wrapper-class\"\r\n                editorClassName=\"editor-class\"\r\n                toolbarClassName=\"toolbar-class\"\r\n                wrapperStyle={{ border: \"1px solid black\", marginBottom: \"20px\" }}\r\n                editorStyle={{ height: \"300px\", padding: \"5px\", backgroundColor: \"white\" }}\r\n                onEditorStateChange={editorState => setshortDescription(editorState)}\r\n              />\r\n            </div>\r\n            <div id=\"addProductEditordescription\">\r\n              <Label className=\"form-control-label\" for=\"exampleCheck\" check>Description</Label>\r\n              <br />\r\n              <Editor editorState={description}\r\n                wrapperClassName=\"wrapper-class\"\r\n                editorClassName=\"editor-class\"\r\n                toolbarClassName=\"toolbar-class\"\r\n                wrapperStyle={{ border: \"1px solid black\", marginBottom: \"20px\" }}\r\n                editorStyle={{ height: \"300px\", padding: \"5px\", backgroundColor: \"white\" }}\r\n                onEditorStateChange={editorState => setDescription(editorState)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n\r\n\r\n        {/* 2 content  - Manufacturer Details*/}\r\n\r\n\r\n        <TabPane tabId=\"2\">\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Manufacturer Country</Label>\r\n                  <Input type=\"text\" value={manufacturerCountry} onChange={(e) => setManufacturerCountry(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Manufacturer</Label>\r\n                  <Input type=\"text\" value={manufacturer} onChange={(e) => setManufacturer(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Feature Product</Label>\r\n                  <br />\r\n                  <Switch onChange={switchSetFeatureProduct} checked={featureProductState} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </TabPane>\r\n\r\n\r\n\r\n        {/* 3 content - Shipping Information*/}\r\n\r\n\r\n        <TabPane tabId=\"3\">\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Delivery Time</Label>\r\n                  <Input type=\"text\" value={deliveryTime} onChange={(e) => setDeliveryTime(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Shipping Charges</Label>\r\n                  <Input type=\"number\" value={shippingCharges} onChange={(e) => setShippingCharges(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">COD Available</Label>\r\n                  <br />\r\n                  <Switch onChange={SetCodAvailability} checked={CodAvailability} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Quantity</Label>\r\n                  <Input type=\"number\" value={quantity} onChange={(e) => setQuantity(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Price</Label>\r\n                  <Input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Special Price</Label>\r\n                  <Input type=\"number\" value={specialPrice} onChange={(e) => setSpecialPrice(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Actual Price</Label>\r\n                  <Input type=\"number\" value={actualPrice} onChange={(e) => setActualPrice(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </TabPane>\r\n\r\n\r\n\r\n\r\n        {/* 4 content  - Meta Information*/}\r\n\r\n\r\n        <TabPane tabId=\"4\">\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Meta Title</Label>\r\n                  <Input type=\"text\" value={metaTitle} onChange={(e) => setMetaTitle(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Meta Keywords</Label>\r\n                  <Input type=\"text\" value={metaKeywords} onChange={(e) => setMetaKeywords(e.target.value)} />\r\n                  <Button size=\"sm\" onClick={pushmetaKeyword}>Add</Button>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <Card body>\r\n                  <CardTitle tag=\"h3\">Meta Keywords</CardTitle>\r\n                  <p>\r\n                    {\r\n                      mkeyword && mkeyword.map((element, index) => {\r\n                        return <div className=\"spanmetakeywords\" key={index}><span>{element}<span className=\"spandeletemetakeywords\" onClick={() => deleteselectedmetakeywords(index)}>❌ </span></span></div>\r\n                      })\r\n                    }\r\n                  </p>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Meta Description</Label>\r\n                  <Input type=\"textarea\" value={metadescription} onChange={(e) => setmetaDescription(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </TabPane>\r\n\r\n\r\n\r\n        {/* 5 content - Images/Videos */}\r\n\r\n\r\n\r\n        {/* Images */}\r\n\r\n        <TabPane tabId=\"5\">\r\n          <Row>\r\n            <Col sm=\"12\">\r\n              <Card body>\r\n\r\n                <UncontrolledCollapse toggler=\"#imagetoggler\">\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <CardTitle tag=\"h3\">Image Upload</CardTitle>\r\n                      <img id=\"uploadPreview\" style={{ width: \"100px\", height: \"100px\" }}/>\r\n                    </Col>\r\n                    <Col md=\"9\">\r\n                      <Card body>\r\n                        <CardTitle tag=\"h3\">Selected Images</CardTitle>\r\n                        <Table>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Image</th>\r\n                              <th>Image Name</th>\r\n                              <th>Edit/Delete</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {ImageArray && ImageArray.map((item, index) => {\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <th scope=\"row\">\r\n                                    <img className=\"imgeditImagesArrayProduct\" src={'http://127.0.0.1:4000/'+item.image} alt=\"imageProduct\"></img>\r\n                                    </th>\r\n                                  <td>{item.image}</td>\r\n                                  <td> <span className=\"btn-inner--icon spaneditIconProductEdit\" onClick={() => editParticular(index)}>\r\n                                    <i className=\"fas fa-edit text-blue iEditSigneditProductImage\"/>\r\n                                  </span>\r\n                                    <span className=\"spandeleteeditProductImage\" onClick={() => delselectedImage(index)}>❌ </span>\r\n                                  </td>\r\n                                </tr>\r\n\r\n                              )\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Form className=\"form21\" onSubmit={uploadProductImage}>\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Image</Label>\r\n                          <Input type=\"file\" id=\"productimage\" onChange={setImg}/>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Base Image</Label>\r\n                          <br />\r\n                          <Switch onChange={switchBaseImage} checked={baseImage} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Small Image</Label>\r\n                          <br />\r\n                          <Switch onChange={switchSmallImage} checked={smallImage} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Thumbnail</Label>\r\n                          <br />\r\n                          <Switch onChange={switchThumbNail} checked={thumbnail} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Thumb Image</Label>\r\n                          <Input type=\"text\" value={thumbImage} onChange={(e) => setthumbImage(e.target.value)} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Label</Label>\r\n                          <Input type=\"text\" value={label} onChange={(e) => setLabel(e.target.value)} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Visible</Label>\r\n                          <br />\r\n                          <Switch onChange={switchVisible} checked={isVisible} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\" style={{ margin: \"auto\" }}>\r\n                        <Button className=\"btn-block\" size=\"sm\" outline color=\"primary\" type=\"submit\">\r\n                          <span className=\"btn-inner--icon\">\r\n                            <i className=\"ni ni-fat-add\">Add to List</i>\r\n                          </span>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </UncontrolledCollapse>\r\n                <Button color=\"primary\" id=\"imagetoggler\" style={{ marginBottom: '1rem' }}>\r\n                  Add Image\r\n                </Button>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n          {/* Video */}\r\n\r\n          <Row>\r\n            <Col sm=\"12\">\r\n              <Card body>\r\n                <UncontrolledCollapse toggler=\"#videotoggler\">\r\n\r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                      <iframe width=\"300\" height=\"200\" src={videos} ></iframe>\r\n                    </Col>\r\n                    <Col>\r\n                      <Card body className=\"videoarraycard\">\r\n                        <CardTitle tag=\"h3\">Selected Videos</CardTitle>\r\n                        {videoarray && videoarray.map((item, index) => {\r\n                          return <CardBody className=\"videocardinner\" key={index}><iframe width=\"120\" height=\"60\" src={item} ></iframe><span className=\"spanVideoAddproduct\">{item}<span className=\"videodeleteiconaddProduct\" onClick={() => delselectedvideos(index)}>❌ </span></span></CardBody>\r\n                        })}\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row md=\"4\">\r\n                    <Col md=\"6\">\r\n                      <Label className=\"form-control-label\">Video URL</Label>\r\n                      <Input type=\"text\" onChange={handleVideoChange} />\r\n                      <Button size=\"sm\" onClick={() => pushVideo()}>Add</Button>\r\n                      <br />\r\n                    </Col>\r\n                  </Row>\r\n                </UncontrolledCollapse>\r\n                <Button color=\"primary\" id=\"videotoggler\" style={{ marginBottom: '1rem' }}>\r\n                  Add Video\r\n                </Button>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </TabPane>\r\n\r\n\r\n\r\n\r\n        {/* 6 content - Vendors */}\r\n\r\n\r\n        <TabPane tabId=\"6\">\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Search Vendor</Label>\r\n                  <Input type=\"text\" onChange={(e) => setSearchedVendorName(e.target.value)} />\r\n                  <ListGroup>\r\n                    {searchedVendorsList && searchedVendorsList.map(item => {\r\n                      return (\r\n                        <ListGroupItem key={item.id} onClick={() => pushVendor(item.id)}>{item.name}</ListGroupItem>\r\n                      )\r\n                    })}\r\n                  </ListGroup>\r\n                  <Button className=\"btn-icon btn-2\" onClick={() => searchVendor()} type=\"button\">\r\n                    <span className=\"btn-inner--icon\">\r\n                      <i class=\"fas fa-search\"></i>\r\n                    </span>\r\n                  </Button>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Purchase Price</Label>\r\n                  <Input type=\"number\" value={purchasePrice} onChange={(e) => setPurchasePrice(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <Card body>\r\n                  <CardTitle tag=\"h3\" style={{ textAlign: \"center\" }}>Selected Vendor</CardTitle>\r\n                  <Table>\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Vendor Id</th>\r\n                              <th>Active</th>\r\n                              <th>Edit/Delete</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {vendorArray && vendorArray.map((item, index) => {\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <th scope=\"row\">{item.vendor_id}</th>\r\n                                  <td>{JSON.stringify(item.active)}</td>\r\n                                  <td> <span className=\"btn-inner--icon spaneditIconProductEdit\" onClick={() => editParticularVendor(index)}>\r\n                                    <i className=\"fas fa-edit text-blue iEditSigneditProductImage\"/>\r\n                                  </span>\r\n                                    <span className=\"spandeleteeditProductImage\" onClick={() => deleteselectedvendors(index)}>❌ </span>\r\n                                  </td>\r\n                                </tr>\r\n\r\n                              )\r\n                            })}\r\n                          </tbody>\r\n                        </Table>\r\n                  {/* {vendorArray && vendorArray.map((item, index) => {\r\n                    return <CardText key={index}>{item.vendor_id}<span onClick={() => deleteselectedvendors(index)}>❌ </span></CardText>\r\n                  })} */}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Updated at</Label>\r\n                  <Input type=\"date\" value={updatedat} onChange={(e) => setDate(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Stock</Label>\r\n                  <Input type=\"number\" value={stock} onChange={(e) => setStock(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Active</Label>\r\n                  <br />\r\n                  <Switch onChange={switchActiveVendor} checked={isActiveVendor} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">vActive</Label>\r\n                  <br />\r\n                  <Switch onChange={switchvActive} checked={isvActive} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Tax Class</Label>\r\n                  <Input type=\"number\" value={vendortaxClass} onChange={(e) => setVendorTaxClass(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n            </Row>\r\n          </Form>\r\n        </TabPane>\r\n\r\n\r\n\r\n\r\n        {/* 7 content - Others */}\r\n\r\n\r\n        <TabPane tabId=\"7\">\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">GST</Label>\r\n                  <Input type=\"number\" value={gst} onChange={(e) => setGst(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Tax Class</Label>\r\n                  <Input type=\"number\" value={productTaxClass} onChange={(e) => setproductTaxClass(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Loan Available</Label>\r\n                  <br />\r\n                  <Switch onChange={switchSetLoanAvailablity} checked={isLoanAvailable} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <Label className=\"form-control-label\">Payment Type</Label>\r\n                <Input type=\"text\" value={paymentType} onChange={(e) => setPaymentType(e.target.value)} />\r\n              </Col>\r\n            </Row>\r\n            <Button color=\"primary\" onClick={()=>updateProduct()} style={{ float:\"right\",marginRight:\"70px\"}}>Update</Button>\r\n          </Form>\r\n        </TabPane>\r\n\r\n      </TabContent>\r\n    </div >\r\n  );\r\n\r\n}\r\n\r\nexport default EditProduct;","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\RootCategories\\EditRootCategory.js",["148","149","150","151","152"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n// reactstrap components\r\nimport {\r\n  Label,\r\n  FormGroup,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  CardTitle\r\n} from \"reactstrap\";\r\n\r\n\r\n\r\nconst EditRootCategory = (props) => {\r\n  const [ctname, setctname] = useState();\r\n  const [categoryId, setCateId] = useState(\"\");\r\n  const [rootCid, setrootCid] = useState(\"\");\r\n  const [level, setlevel] = useState(\"\");\r\n  const [position, setposition] = useState(\"\");\r\n  const [cname, setcname] = useState(\"\");\r\n  const [isactive, setisactive] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [image, setimage] = useState(\"\");\r\n  const [pageT, setpaget] = useState(\"\");\r\n  const [metakeywords, setmetakeywords] = useState([]);\r\n  const [metaDescription, setmetaDescripton] = useState(\"\");\r\n  const [nmenu, setnmenu] = useState();\r\n  const [urlkey, seturlkey] = useState(\"\");\r\n  const [childs, setchilds] = useState(\"\");\r\n  const [mkey, setmkey] = useState();\r\n \r\n\r\n  var d;\r\n  var isFirst = true;\r\n\r\n  useEffect(() => {\r\n    axios.post(`http://localhost:4000/graphql?query={\r\n        rootCategoryDetail(id:\"${props.match.params.id}\"){\r\n          id\r\n          level\r\n          category_id\r\n          position\r\n          rootCategoryId\r\n          categoryName\r\n          active\r\n          description\r\n          image\r\n          pageTitle\r\n          metaKeywords\r\n          metaDescription\r\n          navigationMenu\r\n          urlKey\r\n          childs\r\n        }\r\n      }`).then((result) => {\r\n      setctname(result.data.data.rootCategoryDetail.categoryName)\r\n      d = result.data.data.rootCategoryDetail;\r\n      Tool();\r\n    });\r\n  }, [])\r\n\r\n\r\n \r\n\r\n\r\n\r\n  const Tool = () => {\r\n    if (d.active === true) {\r\n      document.getElementById('trueisActive').checked = true;\r\n      setisactive(\"true\")\r\n    }\r\n    else {\r\n      document.getElementById('falseisActive').checked = true;\r\n      setisactive(\"false\");\r\n    }\r\n    setlevel(d.level);\r\n    setCateId(d.category_id);\r\n    setposition(d.position);\r\n    setrootCid(d.rootCategoryId);\r\n    setcname(d.categoryName);\r\n    setdescription(d.description);\r\n    setimage(d.image);\r\n    setpaget(d.pageTitle);\r\n    setmetakeywords(d.metaKeywords)\r\n\r\n    setmetaDescripton(d.metaDescription)\r\n    seturlkey(d.urlKey)\r\n    setchilds(d.childs)\r\n\r\n    if (d.navigationMenu === true) {\r\n      document.getElementById('truenmenu').checked = true;\r\n      setnmenu(\"true\")\r\n    }\r\n    else {\r\n      document.getElementById('falsenmenu').checked = true;\r\n      setnmenu(\"false\")\r\n    }\r\n    \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  function deleteselectedMetaKeyword(index) {\r\n    for (let i = 0; i < metakeywords.length; i++) {\r\n      if (i === index) {\r\n        metakeywords.splice(index, 1);\r\n        const newmkeywordArray = [...metakeywords];\r\n        console.log(newmkeywordArray)\r\n        setmetakeywords(newmkeywordArray);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function addnewmetaKeys() {\r\n    setmetakeywords(metaKeywords => [...metaKeywords, mkey])\r\n    setmkey()\r\n  }\r\n\r\n  const updateRootCtgry = () => {\r\n    if (isFirst) {\r\n      for (let i = 0; i < metakeywords.length; i++) {\r\n        metakeywords[i] = JSON.stringify(metakeywords[i])\r\n      }\r\n      isFirst = false;\r\n    }\r\n  else {\r\n    for (let i = 0; i < metakeywords.length; i++) {\r\n      metakeywords[i] = JSON.parse(metakeywords[i])\r\n    }\r\n    for (let i = 0; i < metakeywords.length; i++) {\r\n      metakeywords[i] = JSON.stringify(metakeywords[i])\r\n    }\r\n    }\r\n\r\n    axios.post(`http://localhost:4000/graphql?query=mutation{\r\n    updaterootCategory(\r\n      id:\"${props.match.params.id}\",\r\n      level: ${level},\r\n      category_id: \"${categoryId}\",\r\n      position: \"${position}\",\r\n      rootCategoryId: \"${rootCid}\",\r\n      categoryName: \"${cname}\",\r\n      active: ${isactive},\r\n      description: \"${description}\",\r\n      image: \"${image}\",\r\n      pageTitle: \"${pageT}\",\r\n      metaKeywords: [${metakeywords}],\r\n      metaDescription: \"${metaDescription}\",\r\n      navigationMenu: ${nmenu},\r\n      urlKey: \"${urlkey}\",\r\n      childs:  ${childs}\r\n    ){\r\n      level\r\n      position\r\n    }\r\n}`).then((result) => {\r\n      if (result.status === 200) {\r\n        var ele =  document.getElementById(\"alertBoxhide\");\r\n        ele.removeAttribute('id');\r\n        ele.setAttribute('id','alertBoxshow')\r\n        setTimeout(function(){ \r\n          ele.removeAttribute('id');\r\n          ele.setAttribute('id','alertBoxhide')\r\n         }, 3000);\r\n      }\r\n\r\n    }).catch((err) => alert(err))\r\n  }\r\n\r\n\r\n \r\n  return (\r\n    <>\r\n      <div id=\"alertBoxhide\">\r\n        <p className=\"alertMessage\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i> Updated successfully...</p>\r\n      </div>\r\n\r\n      <div className=\"headingTop\">\r\n        <h1 style={{color:\"beige\",fontFamily:\"emoji\"}}>Category Details for: <span className=\"spanheadingtop\">{ctname}</span> </h1>\r\n      </div>\r\n      <Form className=\"form21\">\r\n\r\n        {/*1 row */}\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"rootCategoryId\">Root Category Id</Label>\r\n              <Input\r\n                value={rootCid}\r\n                id=\"exampleFormControlInput1\"\r\n                onChange={e => setrootCid(e.target.value)}\r\n                type=\"text\"\r\n                className=\"form-control-alternative form-control\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"rootCategoryName\">Root Category Name</Label>\r\n              <Input className=\"form-control-alternative form-control\" type=\"text\" value={cname} onChange={e => setcname(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 2 row */}\r\n        <Row>\r\n          <Col md=\"4\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"categoryId\">Category Id</Label>\r\n              <Input className=\"form-control-alternative form-control\" type=\"text\" value={categoryId} onChange={e => setCateId(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"level\">Level</Label>\r\n              <Input className=\"form-control-alternative form-control\" type=\"number\" value={level} onChange={e => setlevel(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"Position\">Position</Label>\r\n              <Input className=\"form-control-alternative form-control\" type=\"text\" value={position} onChange={e => setposition(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 3 row */}\r\n        <Row>\r\n\r\n          <Col md=\"6\" className=\"radioContainer\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"isactive\">Active:</Label>\r\n              <input className=\"radioinput\" type=\"radio\" id=\"trueisActive\" name=\"isActive\" onChange={e => setisactive(e.target.value)} value=\"true\" />\r\n              <Label className=\"form-control-label\" class=\"form-control-label\" for=\"Yes\" className=\"Labelradio\">Yes</Label>\r\n              <input type=\"radio\" className=\"radioinput\" id=\"falseisActive\" name=\"isActive\" onChange={e => setisactive(e.target.value)} value=\"false\" />\r\n              <Label className=\"form-control-label\" class=\"form-control-label\" for=\"No\" className=\"Labelradio\">No</Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 4 row */}\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"description\">Description</Label>\r\n              <Input type=\"textarea\" value={description} onChange={e => setdescription(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"image\">Image</Label>\r\n              <Input type=\"text\" value={image} onChange={e => setimage(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 5 row */}\r\n        <Row>\r\n          <Col md=\"3\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"pagetitle\">Page Title</Label>\r\n              <Input className=\"form-control-alternative form-control\" type=\"text\" value={pageT} onChange={e => setpaget(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"metakeywords\">Meta Keywords</Label>\r\n              <Input className=\"form-control-alternative form-control\" type=\"text\" value={mkey} onChange={(e) => setmkey(e.target.value)} />\r\n              <Button size=\"sm\" style={{ marginTop: \"1px\" }} onClick={() => addnewmetaKeys()}>Add</Button>\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <Card body>\r\n              <CardTitle tag=\"h3\" style={{ textAlign: \"center\" }}>MetaKeywords</CardTitle>\r\n              <p>\r\n                {metakeywords && metakeywords.map((item, index) => {\r\n                  return <div className=\"spanmetakeywords\" key={index}>{item}<span className=\"spandeletemetakeywords\" onClick={() => deleteselectedMetaKeyword(index)}>❌ </span></div>\r\n                })}\r\n              </p>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 6 row */}\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"MetaDescription\">Meta Description</Label>\r\n              <Input className=\"form-control-alternative form-control\" type=\"textarea\" value={metaDescription} onChange={e => setmetaDescripton(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\" className=\"radioContainer\">\r\n            <FormGroup >\r\n              <Label className=\"form-control-label\" for=\"NavigationMenu\">Navigation Menu</Label>\r\n              <input type=\"radio\" className=\"radioinput\" id=\"truenmenu\" name=\"isNm\" onChange={e => setnmenu(e.target.value)} value=\"true\" />\r\n              <Label className=\"form-control-label\" for=\"Yes\" className=\"Labelradio\">Yes</Label>\r\n              <input type=\"radio\" className=\"radioinput\" id=\"falsenmenu\" name=\"isNm\" onChange={e => setnmenu(e.target.value)} value=\"false\" />\r\n              <Label className=\"form-control-label\" for=\"No\" className=\"Labelradio\">No</Label>\r\n\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* 7 row */}\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"UrlKey\">URL Key</Label>\r\n              <Input className=\"form-control-alternative form-control\" type=\"text\" value={urlkey} onChange={e => seturlkey(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"childs\">Childs</Label>\r\n              <Input className=\"form-control-alternative form-control\" type=\"number\" value={childs} onChange={e => setchilds(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <div className=\"categoryExtraBtns\">\r\n        <Button className=\"btn-icon btn-3\" color=\"primary\" id=\"btncategoryaddnew\" type=\"button\" onClick={() => updateRootCtgry()}>\r\n          <span className=\"btn-inner--text\" style={{ marginLeft: \"0.15em\" }}>Update Record</span>\r\n        </Button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditRootCategory;","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\RootCategories\\CategoryStruct.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\RootCategories\\Addrootcategory.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Product\\AddProduct.js",["153","154","155"],"import React, { useEffect, useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, UncontrolledCollapse, CardBody, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState} from 'draft-js'\r\nimport { stateToHTML } from 'draft-js-export-html';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport Switch from 'react-switch';\r\nimport axios from 'axios';\r\nimport { JSONtographql } from 'myModules/jsontographql';\r\n\r\n\r\nconst AddProduct = () => {\r\n\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  const [SKU, setSKU] = useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [description, setDescription] = useState(EditorState.createEmpty())\r\n  const [shortdescription, setshortDescription] = useState(EditorState.createEmpty())\r\n  const [rating, setRating] = useState(\"\");\r\n  const [ratingCount, setRatingCount] = useState(\"\");\r\n  const [switchProductStatus, switchProductstatechange] = useState(false);\r\n  const [productTaxClass, setproductTaxClass]  = useState();\r\n  const [urlKey, setUrlKey] = useState(\"\");\r\n  const [manufacturerCountry, setManufacturerCountry] = useState(\"\");\r\n  const [featureProductState, switchFeatureProductchange] = useState(false);\r\n  const [manufacturer, setManufacturer] = useState(\"\");\r\n  const [deliveryTime, setDeliveryTime] = useState(\"\");\r\n  const [shippingCharges, setShippingCharges] = useState(\"\");\r\n  const [CodAvailability, switchSetCodAvailability] = useState(false);\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [gst, setGst] = useState(\"\");\r\n  const [specialPrice, setSpecialPrice] = useState(\"\");\r\n\r\n  const [actualPrice, setActualPrice] = useState(\"\");\r\n  const [metaTitle, setMetaTitle] = useState(\"\");\r\n  const [metaKeywords, setMetaKeywords] = useState();\r\n  const [metadescription, setmetaDescription] = useState(\"\");\r\n  const [mkeyword,setmkeyword] = useState([]);\r\n  const [images, setImage] = useState();\r\n  const [videos, setVideo] = useState(\"\");\r\n  const [videoarray, setvideoarray] = useState([]);\r\n  const [label, setLabel] = useState(\"\");\r\n  const [purchasePrice, setPurchasePrice] = useState(\"\");\r\n  const [updatedat, setDate] = useState(new Date());\r\n  const [stock, setStock] = useState(\"\");\r\n\r\n  const [vendortaxClass, setVendorTaxClass] = useState(\"\");\r\n  const [paymentType, setPaymentType] = useState(\"\");\r\n\r\n\r\n  const [thumbnail, setThumbnail] = useState(false);\r\n  const [smallImage, setSmallImage] = useState(false);\r\n  const [baseImage, setBaseImage] = useState(false);\r\n  const [thumbImage, setthumbImage] = useState(\"\");\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [isvActive, setisvActive] = useState(false);\r\n  const [isLoanAvailable, setisLoanAvailable] = useState(false);\r\n  const [vendorSearched, setSearchedVendorName] = useState(\"\");\r\n  const [searchedVendorsList, setSearchedVendorsList] = useState(\"\");\r\n  const [isActiveVendor, setisActiveVendor] = useState(false);\r\n  const [vendorArray, setSelectedVendor] = useState([]);\r\n  const [ImageArray, setImageArray] = useState([]);\r\n\r\n\r\n  \r\n\r\n  // General Information related\r\n\r\n  const switchSetProductStatus = () => {\r\n    if (switchProductStatus === false) {\r\n      switchProductstatechange(true)\r\n    \r\n    }\r\n    else {\r\n      switchProductstatechange(false)\r\n \r\n    }\r\n  }\r\n\r\n\r\n\r\n  // metakeywords array\r\n\r\n\r\n\r\n\r\n  function pushmetaKeyword() {\r\n   setmkeyword(mkeyword =>[...mkeyword,JSON.stringify(metaKeywords)])\r\n   setMetaKeywords(\"\")\r\n  }\r\n\r\n\r\n  function deleteselectedmetakeywords(index){\r\n    for(let i=0;i<mkeyword.length;i++){\r\n      if(index===i){\r\n        mkeyword.splice(index,1)\r\n        const newmetaKeywordArray = [...mkeyword]\r\n        setmkeyword(newmetaKeywordArray)\r\n       }\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(()=>{\r\n    setmkeyword(mkeyword)\r\n  },[mkeyword])\r\n\r\n\r\n\r\n  // Manufacturer page related\r\n\r\n  const switchSetFeatureProduct = () => {\r\n    if (featureProductState === false) {\r\n      switchFeatureProductchange(true)\r\n     \r\n    }\r\n    else {\r\n      switchFeatureProductchange(false)\r\n     \r\n    }\r\n  }\r\n\r\n\r\n  // Shipping Details related\r\n\r\n  const SetCodAvailability = () => {\r\n    if (CodAvailability === false) {\r\n      switchSetCodAvailability(true)\r\n    }\r\n    else {\r\n      switchSetCodAvailability(false);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Image/Video Related functions\r\n\r\n\r\n  // Images\r\n\r\n\r\n  const switchThumbNail = () => {\r\n    if (thumbnail === false) {\r\n      setThumbnail(true);\r\n    }\r\n    else {\r\n      setThumbnail(false)\r\n    }\r\n  }\r\n\r\n\r\n  const switchBaseImage = () => {\r\n    if (baseImage === false) {\r\n      setBaseImage(true)\r\n    }\r\n    else {\r\n      setBaseImage(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const switchSmallImage = () => {\r\n    if (smallImage === false) {\r\n      setSmallImage(true)\r\n    }\r\n    else {\r\n      setSmallImage(false)\r\n    }\r\n  }\r\n\r\n\r\n  const switchVisible = () => {\r\n    if (isVisible === false) {\r\n      setIsVisible(true)\r\n    }\r\n    else {\r\n      setIsVisible(false)\r\n    }\r\n  }\r\n\r\n\r\n  const setImg = (e) => {\r\n    var imageFile = e.target.files[0];\r\n    setImage(imageFile.name);\r\n    var oFReader = new FileReader();\r\n    oFReader.readAsDataURL(imageFile);\r\n\r\n    oFReader.onload = function (oFREvent) {\r\n      document.getElementById(\"uploadPreview\").src = oFREvent.target.result;\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n  function addtolistImages(){\r\n    setImageArray(ImageArray=>[...ImageArray,\r\n    {\r\n      image: images,\r\n      baseImage: baseImage,\r\n      smallImage: smallImage,\r\n      thumbnail: thumbnail,\r\n      thumbImage: thumbImage,\r\n      label: label,\r\n      visible: isVisible \r\n    }]);\r\n    setBaseImage(false);\r\n    setSmallImage(false)\r\n    setThumbnail(false)\r\n    setthumbImage(\"\")\r\n    setLabel(\"\")\r\n    setIsVisible(false)\r\n  }\r\n\r\n\r\n  // delete image from selected images list \r\n\r\n  function delselectedImage(id){\r\n   deletefromServer(ImageArray[id].image)\r\n   for(let i=0;i<ImageArray.length;i++){\r\n     if(id===i){\r\n       ImageArray.splice(id,1)\r\n       const newImageArray = [...ImageArray]\r\n       setImageArray(newImageArray)\r\n      }\r\n   }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setImageArray(ImageArray)\r\n  },[ImageArray])\r\n\r\n\r\n\r\n\r\n// Uploading Images to Server\r\n\r\nfunction uploadProductImage(e){\r\n  e.preventDefault();\r\n  addtolistImages();\r\n  const formData = new FormData();\r\n  var file = document.getElementById('productimage').files[0];\r\n  formData.append('file',file)\r\n  axios({\r\n    method: 'post',\r\n    url: 'http://127.0.0.1:4000/uploadproductImages',\r\n    data: formData,\r\n  }).then((response)=>{\r\n  }).catch((e)=>{\r\n    alert(e)\r\n  })\r\n}\r\n\r\n \r\n// Delete image from server\r\n\r\nfunction deletefromServer(imageName){\r\n  console.log(imageName)\r\n  axios({\r\n    method: 'post',\r\n    url: 'http://127.0.0.1:4000/deleteImage',\r\n    data :{\r\n      \"name\":imageName\r\n    }\r\n  }).then((response)=>{\r\n    console.log(response)\r\n  }).catch((e)=>{\r\n    console.log(e)\r\n  })\r\n  // axios.post('http://127.0.0.1:4000/deleteImage',\"data\": imageName).then((response)=>{\r\n  //   console.log(response)\r\n  // }).catch((error)=>{\r\n  //   console.log(error)\r\n  // })\r\n}\r\n\r\n\r\n\r\n\r\n  // Video\r\n\r\n  const handleVideoChange = (e) => {\r\n    setVideo(\"https://www.youtube.com/embed/\" + e.target.value)\r\n  }\r\n\r\n\r\n\r\n\r\n  function pushVideo() {\r\n    setvideoarray(videoarray=>[...videoarray,JSON.stringify(videos)])\r\n    setVideo(\"\");\r\n  }\r\n\r\n  function delselectedvideos(index){\r\n    for(let i = 0;i<videoarray.length;i++){\r\n      if(i===index){\r\n        videoarray.splice(index,1)\r\n        const newvideosArray = [...videoarray];\r\n        setvideoarray(newvideosArray);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    setvideoarray(videoarray)\r\n  },[videoarray])\r\n\r\n\r\n\r\n  // Vendor Related\r\n\r\n  function searchVendor() {\r\n    axios.post(`http://localhost:4000/graphql?query={\r\n      searchVendors(tag:\"${vendorSearched}\"){\r\n       id\r\n       name\r\n       email\r\n       active\r\n      }\r\n    }`).then((result) => {\r\n      setSearchedVendorsList(result.data.data.searchVendors)\r\n    });\r\n  }\r\n\r\n\r\n  function switchvActive() {\r\n    if (isvActive === false) {\r\n      setisvActive(true)\r\n    }\r\n    else {\r\n      setisvActive(false)\r\n    }\r\n  }\r\n\r\n\r\n  function pushVendor(id) {\r\n    if(purchasePrice ===\"\"  && stock ===\"\" && vendortaxClass===\"\"){\r\n      alert(\"First fill in all the fields then select vendor\")\r\n    }\r\n    else{\r\n    setSelectedVendor(vendorArray=>[...vendorArray,\r\n      {\r\n          vendor_id:id,\r\n          purchase_price: parseInt(purchasePrice),\r\n          updated_at:updatedat,\r\n          stock: parseInt(stock),\r\n          active: isActiveVendor,\r\n          vActive: isvActive,\r\n          taxClass:parseInt(vendortaxClass)\r\n  \r\n    }]\r\n    )\r\n    setVendorTaxClass(\"\");\r\n    setPurchasePrice(\"\");\r\n    setDate(\"\");\r\n    setStock(\"\");\r\n    setisActiveVendor(false);\r\n    setisvActive(false);\r\n  }\r\n}\r\n\r\n\r\n  function switchActiveVendor() {\r\n    if (isActiveVendor === false) {\r\n      setisActiveVendor(true)\r\n    }\r\n    else {\r\n      setisActiveVendor(false)\r\n    }\r\n  }\r\n\r\n\r\n// Remove selected vendors from list\r\n\r\n function deleteselectedvendors(index){\r\n  for(let i = 0;i<vendorArray.length;i++){\r\n    if(i === index){\r\n      vendorArray.splice(index,1)\r\n      const newVendorArray = [...vendorArray]\r\n      setSelectedVendor(newVendorArray);\r\n    }\r\n  }\r\n }\r\n\r\nuseEffect(()=>{\r\n  setSelectedVendor(vendorArray)\r\n},[vendorArray])\r\n\r\n\r\n\r\n\r\n\r\n  // Other Information related \r\n\r\n\r\n  const switchSetLoanAvailablity = () => {\r\n    if (isLoanAvailable === false) {\r\n      setisLoanAvailable(true)\r\n    }\r\n    else {\r\n      setisLoanAvailable(false)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Save Product\r\n\r\n\r\n  const saveProduct = () => {\r\n \r\n    // var getDescription = encodeURIComponent(JSON.stringify(convertToRaw(description.getCurrentContent())));\r\n    // var getShortDescription = (JSON.stringify(convertToRaw(shortdescription.getCurrentContent())))\r\n   \r\n    var finalDescription = encodeURIComponent(stateToHTML(description.getCurrentContent()).replace(/\\r?\\n|\\r/g,\"\"));\r\n    var finalShortDescription = encodeURIComponent(stateToHTML(shortdescription.getCurrentContent()).replace(/\\r?\\n|\\r/g,\"\"));\r\n\r\n \r\n\r\n\r\n\r\n\r\n    axios.post(`http://localhost:4000/graphql?query=mutation{\r\n        addProduct(\r\n          SKU: \"${SKU}\",\r\n          productName:\"${productName}\",\r\n          description:\"${finalDescription}\" ,\r\n          shortDescription: \"${finalShortDescription}\",\r\n          rating: ${rating},\r\n          ratingCount: ${ratingCount},\r\n          status: ${switchProductStatus},\r\n          urlKey: \"${urlKey}\",\r\n          manufacturerCountry: \"${manufacturerCountry}\",\r\n          featureProduct: ${featureProductState},\r\n          manufacturer: \"${manufacturer}\",\r\n          deliveryTime: \"${deliveryTime}\",\r\n          shippingCharges: ${shippingCharges},\r\n          codAvailable: ${CodAvailability},\r\n          quantity: ${quantity},\r\n          price: ${price},\r\n          gst: ${gst},\r\n          specialPrice: ${specialPrice},\r\n          displayActualPrice: ${actualPrice},\r\n          taxClass: ${productTaxClass},\r\n          metaTitle: \"${metaTitle}\",\r\n          metaKeywords: [${mkeyword}],\r\n          metaDescription: \"${metadescription}\",\r\n      \r\n          images:${JSONtographql(ImageArray)}, \r\n          videos:[${videoarray}],\r\n          vendors:${JSONtographql(vendorArray)},\r\n          loan_available: ${isLoanAvailable},\r\n          payment_type:\"${paymentType}\"\r\n        ),{\r\n          SKU\r\n        }\r\n}`).then((result) => {\r\n  if (result.status === 200) {\r\n    // document.getElementById(\"alertBox\").style.display = \"block\";\r\n    // setTimeout(function(){ \r\n    //   document.getElementById(\"alertBox\").style.display = \"none\";  \r\n    //  }, 3000);\r\n    var ele =  document.getElementById(\"alertBoxhide\");\r\n    ele.removeAttribute('id');\r\n    ele.setAttribute('id','alertBoxshow')\r\n     setTimeout(function(){ \r\n       ele.removeAttribute('id');\r\n       ele.setAttribute('id','alertBoxhide')\r\n      }, 3000);\r\n     setdefault();\r\n\r\n  }\r\n  }).catch(err => alert(err)) \r\n\r\n\r\n  }\r\n\r\n\r\n  function setdefault(){\r\n    setSKU(\"\");\r\n    setProductName(\"\");\r\n    setDescription(\"\");\r\n    setshortDescription(\"\");\r\n    setRating(\"\");\r\n    setRatingCount(\"\");\r\n    switchSetProductStatus(false);\r\n    setUrlKey(\"\");\r\n    setManufacturer(\"\");\r\n    setManufacturerCountry(\"\");\r\n    switchSetFeatureProduct(false);\r\n    setDeliveryTime(\"\");\r\n    setShippingCharges(\"\");\r\n    SetCodAvailability(\"\");\r\n    setQuantity(\"\");\r\n    setPrice(\"\");\r\n    setGst(\"\");\r\n    setSpecialPrice(\"\");\r\n    setActualPrice(\"\");\r\n    setproductTaxClass(\"\");\r\n    setMetaTitle(\"\");\r\n    setmetaDescription(\"\");\r\n    setisLoanAvailable(false)\r\n    setPaymentType(\"\")\r\n    setmkeyword([]);\r\n    setvideoarray([]);\r\n    setImageArray([]);\r\n    setSelectedVendor([])\r\n  }\r\n\r\n\r\n  return (\r\n   \r\n\r\n    <div>\r\n        <div id=\"alertBoxhide\">\r\n        <p className=\"alertMessage\">Updated successfully...</p>\r\n      </div>\r\n      <Nav tabs>\r\n\r\n        {/*  1 nav item */}\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            General Information\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n        {/* 2 nav item */}\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Manu. Information\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n        {/* 3 nav item */}\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Shipping Details\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n\r\n        {/* 4 nav item */}\r\n\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            Meta Information\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n\r\n\r\n        {/* 5 nav item */}\r\n\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '5' })}\r\n            onClick={() => { toggle('5'); }}\r\n          >\r\n            Images/Videos\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n\r\n        {/* 6 nav item */}\r\n\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '6' })}\r\n            onClick={() => { toggle('6'); }}\r\n          >\r\n            Vendors\r\n          </NavLink>\r\n        </NavItem>\r\n\r\n\r\n        {/* 7 nav item */}\r\n\r\n\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '7' })}\r\n            onClick={() => { toggle('7'); }}\r\n          >\r\n            Other\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n\r\n\r\n      {/* 1 content   -   General Information */}\r\n\r\n\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n          <Form className=\"form21\">\r\n            <Row form> \r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\" for=\"exampleSKU\">SKU</Label>\r\n                  <Input type=\"text\" value={SKU} onChange={(e) => setSKU(e.target.value)} name=\"SKU\" id=\"examplesSKU\" />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={6}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\" for=\"Name\">Product Name</Label>\r\n                  <Input type=\"text\" value={productName} name=\"name\" id=\"ProductName\" onChange={(e) => setProductName(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row form>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Status</Label>\r\n                  <br />\r\n                  <Switch onChange={switchSetProductStatus} checked={switchProductStatus} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\" >URL Key</Label>\r\n                  <Input type=\"text\" value={urlKey} onChange={(e) => setUrlKey(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Rating</Label>\r\n                  <Input type=\"number\" value={rating} onChange={(e) => setRating(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md={3}>\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\" >Rating Count</Label>\r\n                  <Input type=\"number\" value={ratingCount} onChange={(e) => setRatingCount(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* <Button onClick={() => show()}>Sign in</Button> */}\r\n          </Form>\r\n\r\n\r\n          {/* Editor */}\r\n\r\n          <div>\r\n\r\n            <div id=\"addProductEditorshortdescription\">\r\n              <Label className=\"form-control-label\" for=\"exampleCheck\" check>Short Description</Label>\r\n              <br />\r\n\r\n              <Editor editorState={shortdescription}\r\n                wrapperClassName=\"wrapper-class\"\r\n                editorClassName=\"editor-class\"\r\n                toolbarClassName=\"toolbar-class\"\r\n                wrapperStyle={{ border: \"1px solid black\", marginBottom: \"20px\" }}\r\n                editorStyle={{ height: \"300px\", padding: \"5px\",backgroundColor:\"white\" }}\r\n                onEditorStateChange={editorState => setshortDescription(editorState)}\r\n              />\r\n            </div>\r\n            <div id=\"addProductEditordescription\">\r\n              <Label className=\"form-control-label\" for=\"exampleCheck\" check>Description</Label>\r\n              <br />\r\n              <Editor editorState={description}\r\n                wrapperClassName=\"wrapper-class\"\r\n                editorClassName=\"editor-class\"\r\n                toolbarClassName=\"toolbar-class\"\r\n                wrapperStyle={{ border: \"1px solid black\", marginBottom: \"20px\" }}\r\n                editorStyle={{ height: \"300px\", padding: \"5px\",backgroundColor:\"white\" }}\r\n                onEditorStateChange={editorState => setDescription(editorState)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </TabPane>\r\n\r\n\r\n\r\n        {/* 2 content  - Manufacturer Details*/}\r\n\r\n\r\n        <TabPane tabId=\"2\">\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Manufacturer Country</Label>\r\n                  <Input type=\"text\" value={manufacturerCountry} onChange={(e) => setManufacturerCountry(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Manufacturer</Label>\r\n                  <Input type=\"text\" value={manufacturer} onChange={(e) => setManufacturer(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Feature Product</Label>\r\n                  <br />\r\n                  <Switch onChange={switchSetFeatureProduct} checked={featureProductState} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </TabPane>\r\n\r\n\r\n\r\n        {/* 3 content - Shipping Information*/}\r\n\r\n\r\n        <TabPane tabId=\"3\">\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Delivery Time</Label>\r\n                  <Input type=\"text\"value={deliveryTime} onChange={(e) => setDeliveryTime(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Shipping Charges</Label>\r\n                  <Input type=\"number\" value={shippingCharges} onChange={(e) => setShippingCharges(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">COD Available</Label>\r\n                  <br />\r\n                  <Switch onChange={SetCodAvailability} checked={CodAvailability} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Quantity</Label>\r\n                  <Input type=\"number\" value={quantity} onChange={(e) => setQuantity(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Price</Label>\r\n                  <Input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Special Price</Label>\r\n                  <Input type=\"number\" value={specialPrice} onChange={(e) => setSpecialPrice(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Actual Price</Label>\r\n                  <Input type=\"number\" value={actualPrice} onChange={(e) => setActualPrice(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </TabPane>\r\n\r\n\r\n\r\n\r\n        {/* 4 content  - Meta Information*/}\r\n\r\n\r\n        <TabPane tabId=\"4\">\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Meta Title</Label>\r\n                  <Input type=\"text\" value={metaTitle} onChange={(e) => setMetaTitle(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Meta Keywords</Label>\r\n                  <Input type=\"text\" value={metaKeywords} onChange={(e) =>setMetaKeywords(e.target.value)}/>\r\n                  <Button size=\"sm\" onClick={pushmetaKeyword}>Add</Button>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <Card body>\r\n                  <CardTitle tag=\"h3\">Meta Keywords</CardTitle>\r\n                  <p>\r\n                     {\r\n                       mkeyword && mkeyword.map((element,index) => {\r\n                        return <div className=\"spanmetakeywords\" key={index}><span>{JSON.parse(element)}<span className=\"spandeletemetakeywords\" onClick={()=>deleteselectedmetakeywords(index)}>❌ </span></span></div>\r\n                       })\r\n                     }\r\n                     </p>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"6\">\r\n              <FormGroup>\r\n                  <Label className=\"form-control-label\">Meta Description</Label>\r\n                  <Input type=\"textarea\" value={metadescription} onChange={(e) => setmetaDescription(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </TabPane>\r\n\r\n\r\n\r\n        {/* 5 content - Images/Videos */}\r\n\r\n\r\n\r\n        {/* Images */}\r\n\r\n        <TabPane tabId=\"5\">\r\n          <Row>\r\n            <Col sm=\"12\">\r\n              <Card body>\r\n\r\n                <UncontrolledCollapse toggler=\"#imagetoggler\">\r\n                  <Row>\r\n                    <Col md=\"3\">\r\n                      <CardTitle tag=\"h3\">Image Upload</CardTitle>\r\n                      <img id=\"uploadPreview\" style={{ width: \"100px\", height: \"100px\" }} />\r\n                    </Col>\r\n                    <Col md=\"9\">\r\n                      <Card body>\r\n                        <CardTitle tag=\"h3\">Selected Images</CardTitle>\r\n                        {ImageArray && ImageArray.map((item,index) => {\r\n                          return <CardText key={index}>{item.image}<span onClick={()=>delselectedImage(index)}>❌ </span></CardText>\r\n                        })}\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <Form className=\"form21\" onSubmit={uploadProductImage} encType=\"multipart/form-data\">\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Image</Label>\r\n                          <Input type=\"file\" id=\"productimage\" onChange={setImg} name=\"productimage\"/>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Base Image</Label>\r\n                          <br />\r\n                          <Switch onChange={switchBaseImage} checked={baseImage} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Small Image</Label>\r\n                          <br />\r\n                          <Switch onChange={switchSmallImage} checked={smallImage} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Thumbnail</Label>\r\n                          <br />\r\n                          <Switch onChange={switchThumbNail} checked={thumbnail} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Thumb Image</Label>\r\n                          <Input type=\"text\" value={thumbImage} onChange={(e) => setthumbImage(e.target.value)} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Label</Label>\r\n                          <Input type=\"text\" value={label} onChange={(e) => setLabel(e.target.value)} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\">\r\n                        <FormGroup>\r\n                          <Label className=\"form-control-label\">Visible</Label>\r\n                          <br />\r\n                          <Switch onChange={switchVisible} checked={isVisible} />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md=\"3\" style={{ margin: \"auto\" }}>\r\n                        <Button type=\"submit\" className=\"btn-block\" size=\"sm\" outline color=\"primary\">\r\n                          <span className=\"btn-inner--icon\">\r\n                            <i className=\"ni ni-fat-add\">Add to List</i>\r\n                          </span>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </Form>\r\n                </UncontrolledCollapse>\r\n                <Button color=\"primary\" id=\"imagetoggler\" style={{ marginBottom: '1rem' }}>\r\n                  Add Image\r\n                </Button>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n          {/* Video */}\r\n\r\n          <Row>\r\n            <Col sm=\"12\">\r\n              <Card body>\r\n                <UncontrolledCollapse toggler=\"#videotoggler\">\r\n                  \r\n                  <Row>\r\n                    <Col md=\"4\">\r\n                    <iframe width=\"300\" height=\"200\" src={videos} ></iframe>\r\n                    </Col>\r\n                    <Col>\r\n                    <Card body className=\"videoarraycard\">\r\n                        <CardTitle tag=\"h3\">Selected Videos</CardTitle>\r\n                        {videoarray && videoarray.map((item,index) => {\r\n                          return <CardBody className=\"videocardinner\" key={index}><iframe width=\"120\" height=\"60\" src={JSON.parse(item)} ></iframe><span className=\"spanVideoAddproduct\">{JSON.parse(item)}<span className=\"videodeleteiconaddProduct\" onClick={()=>delselectedvideos(index)}>❌ </span></span></CardBody>\r\n                        })}\r\n                      </Card>\r\n                    </Col>\r\n                    </Row>\r\n                    <Row md=\"4\">\r\n                    <Col md=\"6\">\r\n                      <Label className=\"form-control-label\">Video URL</Label>\r\n                      <Input type=\"text\" onChange={handleVideoChange} />\r\n                      <Button size=\"sm\" onClick={()=>pushVideo()}>Add</Button>\r\n                      <br/>\r\n                    </Col>\r\n                  </Row>\r\n                </UncontrolledCollapse>\r\n                <Button color=\"primary\" id=\"videotoggler\" style={{ marginBottom: '1rem' }}>\r\n                  Add Video\r\n                </Button>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </TabPane>\r\n\r\n\r\n\r\n\r\n        {/* 6 content - Vendors */}\r\n\r\n\r\n        <TabPane tabId=\"6\">\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Search Vendor</Label>\r\n                  <Input type=\"text\"  onChange={(e) => setSearchedVendorName(e.target.value)} />\r\n                  <ListGroup>\r\n                    {searchedVendorsList && searchedVendorsList.map(item => {\r\n                      return (\r\n                        <ListGroupItem key={item.id} onClick={() => pushVendor(item.id)}>{item.name}</ListGroupItem>\r\n                      )\r\n                    })}\r\n                  </ListGroup>\r\n                  <Button className=\"btn-icon btn-2\" onClick={() => searchVendor()} type=\"button\">\r\n                    <span className=\"btn-inner--icon\">\r\n                      <i class=\"fas fa-search\"></i>\r\n                    </span>\r\n                  </Button>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Purchase Price</Label>\r\n                  <Input type=\"number\" value={purchasePrice} onChange={(e) => setPurchasePrice(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <Card body>\r\n                  <CardTitle tag=\"h3\" style={{textAlign:\"center\"}}>Selected Vendor</CardTitle>\r\n                  {vendorArray && vendorArray.map((item,index)=>{\r\n                    return <CardText key={index}>{item.vendor_id}<span onClick={()=>deleteselectedvendors(index)}>❌ </span></CardText>\r\n                  })}\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Updated at</Label>\r\n                  <Input type=\"date\" value={updatedat} onChange={(e) => setDate(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Stock</Label>\r\n                  <Input type=\"number\" value={stock} onChange={(e) => setStock(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Active</Label>\r\n                  <br />\r\n                  <Switch onChange={switchActiveVendor} checked={isActiveVendor} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">vActive</Label>\r\n                  <br />\r\n                  <Switch onChange={switchvActive} checked={isvActive} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Tax Class</Label>\r\n                  <Input type=\"number\" value={vendortaxClass} onChange={(e) => setVendorTaxClass(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            \r\n            </Row>\r\n          </Form>\r\n        </TabPane>\r\n\r\n\r\n\r\n\r\n        {/* 7 content - Others */}\r\n\r\n\r\n        <TabPane tabId=\"7\">\r\n          <Form className=\"form21\">\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">GST</Label>\r\n                  <Input type=\"number\" value={gst} onChange={(e) => setGst(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Tax Class</Label>\r\n                  <Input type=\"number\" value={productTaxClass} onChange={(e) =>setproductTaxClass(e.target.value)} />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label className=\"form-control-label\">Loan Available</Label>\r\n                  <br />\r\n                  <Switch onChange={switchSetLoanAvailablity} checked={isLoanAvailable} />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <Label className=\"form-control-label\">Payment Type</Label>\r\n                <Input type=\"text\" value={paymentType} onChange={(e) => setPaymentType(e.target.value)} />\r\n              </Col>\r\n            </Row>\r\n            <Button color=\"primary\" onClick={() => saveProduct()} style={{ float: \"right\", marginRight: \"70px\" }}>Save</Button>\r\n          </Form>\r\n        </TabPane>\r\n\r\n      </TabContent>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default AddProduct;","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Product\\ProductStruct.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Users\\UserStruct.js",[],"D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Vendors\\AddVendor.js",["156"],"import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input, CardText, CardTitle, Card } from 'reactstrap';\r\nimport Switch from 'react-switch';\r\nimport axios from 'axios';\r\nimport VendorLogo from '../../../assets/img/myImages/addvendorlogo.jpg'\r\n\r\nconst AddVendor = () => {\r\n\r\n  const [name, setname] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [mobile, setmobile] = useState(\"\");\r\n  const [country, setcountry] = useState(\"\");\r\n  const [city, setcity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [zip, setzip] = useState(\"\");\r\n  const [address, setaddress] = useState(\"\");\r\n  const [landmark, setlandmark] = useState(\"\");\r\n  const [gst, setgst] = useState(\"\");\r\n  const [tin, settin] = useState(\"\");\r\n  const [isActive, setisActive] = useState(false)\r\n  const [type, settype] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [avatar, setavatar] = useState(\"\");\r\n  const [selectedImage, setSelectedImage] = useState();\r\n  const [ImageArray, setImageArray] = useState([]);\r\n  const [selectedservicable, setselectedservicable] = useState();\r\n  const [servicableArray, setservicableArray] = useState([]);\r\n  const [vendorUserId, setvendorUserId] = useState();\r\n\r\n  // Active\r\n\r\n  function setisactivefunction() {\r\n    if (isActive === false) {\r\n      setisActive(true)\r\n    }\r\n    else {\r\n      setisActive(false)\r\n    }\r\n  }\r\n\r\n\r\n  // servicable Related\r\n\r\n  function addtolistservicable() {\r\n    if (selectedservicable) {\r\n      setservicableArray(servicableArray => [...servicableArray,JSON.stringify(selectedservicable)])\r\n      setselectedservicable();\r\n    }\r\n    else {\r\n      alert(\"Type something First\");\r\n    }\r\n  }\r\n\r\n  function deleteServeceablefromList(index) {\r\n    for (let i = 0; i < servicableArray.length; i++) {\r\n      if (index === i) {\r\n        servicableArray.splice(index, 1)\r\n        const newservicableArray = [...servicableArray]\r\n        setservicableArray(newservicableArray)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setservicableArray(servicableArray)\r\n  }, [servicableArray])\r\n\r\n\r\n  // Images Related\r\n\r\n\r\n  const setImg = (e) => {\r\n    var imageFile = e.target.files[0];\r\n    setSelectedImage(imageFile.name);\r\n    var oFReader = new FileReader();\r\n    oFReader.readAsDataURL(imageFile);\r\n\r\n    oFReader.onload = function (oFREvent) {\r\n      document.getElementById(\"uploadPreview\").src = oFREvent.target.result;\r\n    };\r\n  }\r\n\r\n  // Add To List Images\r\n\r\n\r\n  function addtolistImages() {\r\n    setImageArray(ImageArray => [...ImageArray,selectedImage])\r\n  }\r\n\r\n  useEffect(() => {\r\n    setImageArray(ImageArray)\r\n  }, [ImageArray])\r\n\r\n  // Delete Image\r\n\r\n  function delselectedImage(id) {\r\n    deletefromServer(ImageArray[id])\r\n    for (let i = 0; i < ImageArray.length; i++) {\r\n      if (id === i) {\r\n        ImageArray.splice(id, 1)\r\n        const newImageArray = [...ImageArray]\r\n        setImageArray(newImageArray)\r\n      }\r\n    }\r\n  }\r\n\r\n  // mutation($name:String, $email:String!, $type:String!, $phoneNumber:String!, $country:String, $city: String, $state: String, $zipcode: String, $address: String, $landmark: String, $gstNo: String, $tinNo: String, $servicable: Array, $type: String, $active: boolean, $businessCard: Array, $description: String, $avatar: String)\r\n\r\n\r\n  // Add image to server\r\n\r\n  function uploadimagetoserver(e){\r\n    e.preventDefault();\r\n    if(selectedImage){\r\n    addtolistImages();\r\n    const formData = new FormData();\r\n    var file = document.getElementById('imagesListvendor').files[0];\r\n    formData.append('file',file)\r\n    axios({\r\n      method: 'post',\r\n      url: 'http://127.0.0.1:4000/uploadvendorsshopimages',\r\n      data: formData,\r\n    }).then((response)=>{\r\n      console.log(\"Image saved\")\r\n    }).catch((e)=>{\r\n      alert(e)\r\n    })\r\n  }\r\n  else{\r\n    alert(\"Select an image first\")\r\n  }\r\n  }\r\n\r\n  // Delete image from server\r\n\r\n  function deletefromServer(imageName) {\r\n    axios({\r\n      method: 'post',\r\n      url: 'http://127.0.0.1:4000/deletevendorshopImage',\r\n      data: {\r\n        \"name\": imageName\r\n      }\r\n    }).then((response) => {\r\n    }).catch((e) => {\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  // Add Vendor\r\n\r\n  function addVendor() {\r\n    const data = {\r\n      query:`{\r\n        finduserByMobile(mobile:\"${mobile}\"){\r\n            id\r\n            email\r\n            firstname\r\n        }\r\n      }`\r\n    }\r\n    axios.post('http://localhost:4000/graphql', data).then((res)=>{\r\n      if(res.data.data.finduserByMobile){\r\n        var d = res.data.data.finduserByMobile;\r\n        setvendorUserId(d.id)\r\n      }\r\n      else{\r\n        addNewUserVendor();\r\n      }\r\n      nowaddVendor();\r\n    }).catch((err)=>{\r\n      console.log(err)\r\n    })\r\n\r\n    // const data = await axios.post('http://localhost:4000/graphql', {\r\n    //   query: `mutation addVendor($name:String!, $email:String!, $type:String!, $phoneNumber:String!, $country:String, $city: String, $state: String, $zipcode: String, $address: String, $landmark: String, $gstNo: String, $tinNo: String, $servicable: Array, $type: String, $active: boolean, $businessCard: Array, $description: String, $avatar: String){\r\n    //    addVendor(name:$name,email:$email, phoneNumber:$phoneNumber,country:$country,city:$city, state:$state,zipcode:$zipcode, address:$address, landmark:$landmark, gstNo:$gstNo, tinNo:$tinNo, servicable:$servicable, type:$type, active:$active, businessCard:$businessCard, description:$description, avatar:$avatar){\r\n    //     name\r\n    //     email\r\n    //   }\r\n    // }\r\n    //   }`,\r\n    //   variables: {\r\n    //     name: name,\r\n    //     email: email,\r\n    //     phoneNumber: mobile,\r\n    //     country: country,\r\n    //     city: city,\r\n    //     state: state,\r\n    //     zipcode: zip,\r\n    //     address: address,\r\n    //     landmark: landmark,\r\n    //     gstNo: gst,\r\n    //     tinNo: tin,\r\n    //     servicable: servicableArray,\r\n    //     type: type,\r\n    //     active: isActive,\r\n    //     businessCard: ImageArray,\r\n    //     description: description,\r\n    //     avatar: avatar\r\n    //   }\r\n    // }, {\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json'\r\n    //   }\r\n    // }\r\n    // )\r\n\r\n\r\n\r\n    function addNewUserVendor(){\r\n      var time = new Date();\r\n      var minutesOffset = time.getTimezoneOffset()\r\n      var millisecondsOffset = minutesOffset*60*1000\r\n      var created_at = new Date(time - millisecondsOffset)\r\n      created_at =  created_at.toISOString().substr(0, 10)\r\n  axios.post(`http://localhost:4000/graphql?query=mutation{\r\n      UserRegistration(\r\n           firstname:\"${name}\",\r\n           lastname:\"Singh\",\r\n           password:\"${password}\",\r\n           email:\"${email}\", \r\n           role:\"vendor\",\r\n           mobileno:\"${mobile}\",\r\n           active:${isActive}, \r\n           subscribe:true,\r\n           salt:\"salt\",\r\n           avatar:\"${avatar}\",\r\n           wtpSubs:true,\r\n           created_at:\"${created_at}\",\r\n           updated_at:\"${created_at}\",\r\n           otp:\"23334\"\r\n      ){\r\n        id\r\n      }\r\n    }`).then((res)=>{\r\n      if(res.data.data.UserRegistration){\r\n        var response = res.data.data.UserRegistration;\r\n        setvendorUserId(response.id)\r\n      }\r\n      else{\r\n          alert(\"Error saving user\");\r\n      }\r\n    })\r\n    .catch((err)=>console.log(err))\r\n  }\r\n\r\n    function nowaddVendor(){\r\n\r\n    for(let i = 0;i<ImageArray.length;i++){\r\n      ImageArray[i] = JSON.stringify(ImageArray[i])\r\n    }\r\n    \r\n    axios.post(`http://localhost:4000/graphql?query=mutation{\r\n        addVendor(\r\n             user: \"${vendorUserId}\",\r\n             name:\"${name}\",\r\n             password:\"${password}\"\r\n             email:\"${email}\", \r\n             phoneNumber:\"${mobile}\",\r\n             country:\"${country}\",\r\n             city:\"${city}\", \r\n             state:\"${state}\",\r\n             zipcode:\"${zip}\", \r\n             address:\"${address}\", \r\n             landmark:\"${landmark}\", \r\n             gstNo:\"${gst}\", \r\n             tinNo:\"${tin}\", \r\n             servicable:[${servicableArray}], \r\n             type:\"${type}\",\r\n             active:${isActive}, \r\n             businessCard:[${ImageArray}], \r\n             description:\"${description}\", \r\n             avatar:\"${avatar}\"\r\n        ){\r\n          id\r\n          name\r\n          email\r\n        }\r\n      }`).then((res)=>{\r\n        var ele =  document.getElementById(\"alertBoxhide\");\r\n        ele.removeAttribute('id');\r\n        ele.setAttribute('id','alertBoxshow')\r\n         setTimeout(function(){ \r\n           ele.removeAttribute('id');\r\n           ele.setAttribute('id','alertBoxhide')\r\n          }, 3000);\r\n      })\r\n      .catch((err)=>console.log(err))\r\n    \r\n\r\n    }\r\n\r\n    //     const body =  {\r\n    //       mutation:`\r\n    //         {\r\n    //           addVendor(\r\n    //             name:$name,\r\n    //               email:$email, \r\n    //               phoneNumber:$phoneNumber,\r\n    //               country:$country,\r\n    //               city:$city, \r\n    //               state:$state,\r\n    //               zipcode:$zipcode, \r\n    //               address:$address, \r\n    //               landmark:$landmark, \r\n    //               gstNo:$gstNo, \r\n    //               tinNo:$tinNo, \r\n    //               servicable:$servicable, \r\n    //               type:$type, active:$active, \r\n    //               businessCard:$businessCard, \r\n    //               description:$description, \r\n    //               avatar:$avatar\r\n    //               ){ \r\n    //             name\r\n    //            email\r\n    //           }\r\n    //         }\r\n    //       `,\r\n    //       variables: {\r\n    //         names:name,\r\n    //         email:email,\r\n    //         phoneNumber:mobile,\r\n    //         country:country,\r\n    //         city:city,\r\n    //         state:state,\r\n    //         zipcode:zip,\r\n    //         address:address,\r\n    //         landmark:landmark,\r\n    //         gstNo:gst,\r\n    //         tinNo:tin,\r\n    //         servicable:servicableArray,\r\n    //         type:type,\r\n    //         active:isActive,\r\n    //         businessCard:ImageArray,\r\n    //         description:description,\r\n    //         avatar:avatar\r\n\r\n    //       },\r\n    //     }\r\n    //     console.log(body)\r\n    //     axios.post(`http://localhost:4000/graphql`, body ,options)\r\n    //     .then((res) => {\r\n    //     console.log(res)\r\n    //   })\r\n    // .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n     <div id=\"alertBoxhide\">\r\n        <p className=\"alertMessage\">Updated successfully...</p>\r\n      </div>\r\n     <div className=\"designAddsection\">\r\n        <div className=\"designcontainuseraddheader\">\r\n            <img src={VendorLogo} class=\"designaddimageheader\" alt=\"preview\"/>\r\n        </div>\r\n    </div>\r\n      <Form className=\"form21\" onSubmit={uploadimagetoserver} encType=\"multipart-form-data\">\r\n        <Row form>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"Name\">Vendor Name</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={name} onChange={(e) => setname(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Password</Label>\r\n              <Input type=\"password\" className=\"inputClass\" value={password} onChange={(e) => setpassword(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Email</Label>\r\n              <Input type=\"email\" className=\"inputClass\" value={email} onChange={(e) => setemail(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"2\">\r\n            <FormGroup style={{ display: \"table\", margin: \"auto\" }}>\r\n              <Label className=\"form-control-label\">Active</Label>\r\n              <br />\r\n              <Switch onChange={() => setisactivefunction()} checked={isActive} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row form>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Phone number</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={mobile} onChange={(e) => setmobile(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Country</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={country} onChange={(e) => setcountry(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Avatar</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={avatar} onChange={(e) => setavatar(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row form>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"exampleCity\">City</Label>\r\n              <Input type=\"text\" name=\"city\" id=\"exampleCity\" value={city} className=\"inputClass\" onChange={(e) => setcity(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"exampleState\">State</Label>\r\n              <Input type=\"text\" name=\"state\" id=\"exampleState\" value={state} className=\"inputClass\" onChange={(e) => setState(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={2}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"exampleZip\">Zip</Label>\r\n              <Input type=\"text\" name=\"zip\" id=\"exampleZip\" value={zip} className=\"inputClass\" onChange={(e) => setzip(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row Form>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"Address\">Address</Label>\r\n              <Input type=\"textarea\" className=\"inputClass\" value={address} onChange={(e) => setaddress(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"landmark\">Landmark</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={landmark} onChange={(e) => setlandmark(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row Form>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"Gst\">GST No.</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={gst} onChange={(e) => setgst(e.target.value)} />\r\n            </FormGroup>\r\n\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"Tin no\">TIN No.</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={tin} onChange={(e) => settin(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Type</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={type} onChange={(e) => settype(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={5}>\r\n            <Card body>\r\n              <CardTitle tag=\"h3\">servicable</CardTitle>\r\n              <FormGroup>\r\n                <Input type=\"text\" className=\"inputClass\" value={selectedservicable} onChange={(e) => setselectedservicable(e.target.value)} />\r\n\r\n                <Button size=\"sm\" onClick={addtolistservicable}>Add</Button>\r\n              </FormGroup>\r\n              <div>\r\n                <h3>List</h3>\r\n                {servicableArray && servicableArray.map((item, index) => {\r\n                  return <CardText key={index}>{item}<i onClick={() => deleteServeceablefromList(index)} class=\"fa fa-trash\" aria-hidden=\"true\" style={{ color: \"red\", marginLeft: \"8px\" }}></i></CardText>\r\n                })}\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n          <Col md={7}>\r\n            <Card body>\r\n              <CardTitle tag=\"h3\">Images</CardTitle>\r\n              <img id=\"uploadPreview\" style={{ width: \"100px\", height: \"100px\" }} />\r\n              <input type=\"file\" id=\"imagesListvendor\" onChange={setImg} />\r\n              <Button size=\"sm\" type=\"submit\">Add</Button>\r\n              <div>\r\n                <h3>Selected Images</h3>\r\n                {ImageArray && ImageArray.map((item, index) => {\r\n                  return <CardText key={index}>{item}<i onClick={() => delselectedImage(index)} class=\"fa fa-trash\" aria-hidden=\"true\" style={{ color: \"red\", marginLeft: \"8px\" }}></i></CardText>\r\n                })}\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Description</Label>\r\n              <Input type=\"textarea\" className=\"inputClass\" value={description} onChange={(e) => setdescription(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"categoryExtraBtns\" style={{ \"display\": \"flex\", \"flex-direction\": \"row-reverse\" }}>\r\n          <Button className=\"btn-icon btn-3\" color=\"primary\" id=\"btncategoryaddnew\" type=\"button\" onClick={() => addVendor()}>\r\n            <i class=\"fas fa-plus    \"></i>  <span className=\"btn-inner--text\" style={{ marginLeft: \"0.15em\" }}>Add Vendor</span>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddVendor;","D:\\Admin Panel\\argon-dashboard-react-master\\src\\views\\componentStructure.js\\Users\\AddUser.js",["157","158","159","160","161","162"],"import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input, CardText, CardTitle, Card } from 'reactstrap';\r\nimport Switch from 'react-switch';\r\nimport axios from 'axios';\r\nimport Adduserlogo from '../../../assets/img/myImages/adduserImg.png'\r\n\r\nconst AddUser = () => {\r\n\r\n  const [firstname, setfirstname] = useState(\"\");\r\n  const [lastname, setlastame] = useState(\"\");\r\n  const [role, setrole] = useState(\"\");\r\n  const [isActive, setisActive] = useState(false);\r\n  const [mobile, setmobile] = useState(\"\");\r\n  const [subscribed, setsubscribed] = useState(false);\r\n  const [password, setpassword] = useState(\"\");\r\n  const [avatar, setavatar] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [salt, setsalt] = useState(\"\")\r\n  const [wtpSubs, setwtpSubs] = useState(false);\r\n  const [updatedat, setupdatedat] = useState(new Date());\r\n  const [otp, setotp] = useState(\"\");\r\n\r\n\r\n  // Active\r\n\r\n  function setisactivefunction() {\r\n    if (isActive === false) {\r\n      setisActive(true)\r\n    }\r\n    else {\r\n      setisActive(false)\r\n    }\r\n  }\r\n\r\n\r\n//   Is subscribed\r\n\r\nfunction setisUserSubscribed(){\r\n    if(subscribed === false){\r\n        setsubscribed(true)\r\n    }\r\n    else{\r\n        setsubscribed(false)\r\n    }\r\n}\r\n\r\n//   Is whatsapp subscribed\r\n\r\n\r\n  function setiswtsSubscribed(){\r\n      if(wtpSubs === false){\r\n          setwtpSubs(true)\r\n      }\r\n      else{\r\n          setwtpSubs(false)\r\n      }\r\n  }\r\n\r\n\r\n\r\n\r\n  // mutation($name:String, $email:String!, $type:String!, $phoneNumber:String!, $country:String, $city: String, $state: String, $zipcode: String, $address: String, $landmark: String, $gstNo: String, $tinNo: String, $servicable: Array, $type: String, $active: boolean, $businessCard: Array, $description: String, $avatar: String)\r\n\r\n\r\n\r\n  // Add Vendor\r\n\r\n  function addUser() {\r\n    const data = {\r\n      query:`{\r\n        finduserByMobile(mobile:\"${mobile}\"){\r\n            email\r\n            firstname\r\n        }\r\n      }`\r\n    }\r\n    axios.post('http://localhost:4000/graphql', data).then((res)=>{\r\n      console.log(res.data.data.finduserByMobile)\r\n      if(res.data.data.finduserByMobile){\r\n        alert(\"Already created\")\r\n      }\r\n      else{\r\n        nowaddUser()\r\n      }\r\n    }).catch((err)=>{\r\n      console.log(err)\r\n    })\r\n\r\n    function nowaddUser(){\r\n        var time = new Date();\r\n        var minutesOffset = time.getTimezoneOffset()\r\n        var millisecondsOffset = minutesOffset*60*1000\r\n        var created_at = new Date(time - millisecondsOffset)\r\n        created_at =  created_at.toISOString().substr(0, 10)\r\n    axios.post(`http://localhost:4000/graphql?query=mutation{\r\n        UserRegistration(\r\n             firstname:\"${firstname}\",\r\n             lastname:\"${lastname}\",\r\n             password:\"${password}\",\r\n             email:\"${email}\", \r\n             role:\"${role}\",\r\n             mobileno:\"${mobile}\",\r\n             active:${isActive}, \r\n             subscribe:${subscribed},\r\n             salt:\"salt\",\r\n             avatar:\"${avatar}\",\r\n             wtpSubs:${wtpSubs},\r\n             created_at:\"${created_at}\",\r\n             updated_at:\"${updatedat}\",\r\n             otp:\"${otp}\"\r\n        ){\r\n          id\r\n          firstname\r\n          email\r\n          created_at\r\n        }\r\n      }`).then((res)=>{\r\n        console.log(res)\r\n        var data = res.data.data.UserRegistration;\r\n        if(res.data.data.UserRegistration){\r\n          var userId = data.id\r\n            axios.post(`http://localhost:4000/graphql?query=mutation{\r\n              createCart(\r\n                user:\"${userId}\"\r\n                ){\r\n                  user\r\n                }\r\n            }`).then((response)=>{\r\n              console.log(response)\r\n              if(response.data.data.createCart){\r\n                var ele =  document.getElementById(\"alertBoxhide\");\r\n                ele.removeAttribute('id');\r\n                ele.setAttribute('id','alertBoxshow')\r\n                 setTimeout(function(){ \r\n                   ele.removeAttribute('id');\r\n                   ele.setAttribute('id','alertBoxhide')\r\n                  }, 3000);\r\n              }\r\n              else{\r\n                alert(\"Error creating cart\");\r\n              }\r\n            }).catch((err)=>console.log(err))\r\n           \r\n        }\r\n        else{\r\n            alert(\"Error saving user\");\r\n        }\r\n      })\r\n      .catch((err)=>console.log(err))\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n     <div id=\"alertBoxhide\">\r\n        <p className=\"alertMessage\">Updated successfully...</p>\r\n      </div>\r\n    <div className=\"designAddsection\">\r\n        <div className=\"designcontainuseraddheader\">\r\n            <img src={Adduserlogo} class=\"designaddimageheader\" alt=\"preview\"/>\r\n        </div>\r\n    </div>\r\n      <Form className=\"form21\">\r\n        <Row form>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\" for=\"Name\">First Name</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={firstname} onChange={(e) => setfirstname(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Last Name</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={lastname} onChange={(e) => setlastame(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Password</Label>\r\n              <Input type=\"password\" className=\"inputClass\" value={password} onChange={(e) => setpassword(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          \r\n        </Row>\r\n        <Row form>\r\n        <Col md=\"4\">\r\n            <FormGroup style={{ display: \"table\", margin: \"auto\" }}>\r\n              <Label className=\"form-control-label\">User Active</Label>\r\n              <br />\r\n              <Switch onChange={() => setisactivefunction()} checked={isActive} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FormGroup style={{ display: \"table\", margin: \"auto\" }}>\r\n              <Label className=\"form-control-label\">Subscribed</Label>\r\n              <br />\r\n              <Switch onChange={() => setisUserSubscribed()} checked={subscribed} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <FormGroup style={{ display: \"table\", margin: \"auto\" }}>\r\n              <Label className=\"form-control-label\">Whatsapp Subscription</Label>\r\n              <br />\r\n              <Switch onChange={() => setiswtsSubscribed()} checked={wtpSubs} />\r\n            </FormGroup>\r\n          </Col>\r\n          </Row>\r\n          <Row form> \r\n          <Col md={4}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Email</Label>\r\n              <Input type=\"email\" className=\"inputClass\" value={email} onChange={(e) => setemail(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Role</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={role} onChange={(e) => setrole(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Phone number</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={mobile} onChange={(e) => setmobile(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <FormGroup>\r\n              <Label className=\"form-control-label\">Avatar</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={avatar} onChange={(e) => setavatar(e.target.value)} />\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n         <Col md={3}>\r\n         <FormGroup>\r\n              <Label className=\"form-control-label\">Updated at</Label>\r\n              <Input type=\"date\" className=\"inputClass\" value={updatedat} onChange={(e) => setupdatedat(e.target.value)} />\r\n            </FormGroup>\r\n         </Col>\r\n         <Col md={3}>\r\n         <FormGroup>\r\n              <Label className=\"form-control-label\">OTP</Label>\r\n              <Input type=\"text\" className=\"inputClass\" value={otp} onChange={(e) => setotp(e.target.value)} />\r\n            </FormGroup>\r\n         </Col>\r\n        </Row>\r\n        <div className=\"categoryExtraBtns\" style={{ \"display\": \"flex\", \"flex-direction\": \"row-reverse\" }}>\r\n          <Button className=\"btn-icon btn-3\" color=\"primary\" id=\"btncategoryaddnew\" type=\"button\" onClick={() => addUser()}>\r\n            <i class=\"fas fa-plus    \"></i>  <span className=\"btn-inner--text\" style={{ marginLeft: \"0.15em\" }}>Add User</span>\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddUser;",{"ruleId":"163","severity":1,"message":"164","line":54,"column":9,"nodeType":"165","messageId":"166","endLine":54,"endColumn":21},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":2,"message":"172","line":1,"column":31,"nodeType":"165","messageId":"173","endLine":1,"endColumn":32},{"ruleId":"171","severity":2,"message":"172","line":2,"column":5,"nodeType":"165","messageId":"173","endLine":2,"endColumn":6},{"ruleId":"174","severity":1,"message":"175","line":178,"column":6,"nodeType":"176","endLine":178,"endColumn":8,"suggestions":"177"},{"ruleId":"163","severity":1,"message":"178","line":831,"column":12,"nodeType":"165","messageId":"166","endLine":831,"endColumn":22},{"ruleId":"179","severity":1,"message":"180","line":1370,"column":23,"nodeType":"181","endLine":1370,"endColumn":92},{"ruleId":"182","severity":1,"message":"183","line":1482,"column":23,"nodeType":"181","endLine":1482,"endColumn":70},{"ruleId":"182","severity":1,"message":"183","line":1488,"column":83,"nodeType":"181","endLine":1488,"endColumn":127},{"ruleId":"174","severity":1,"message":"184","line":63,"column":11,"nodeType":"185","endLine":63,"endColumn":46},{"ruleId":"186","severity":1,"message":"187","line":244,"column":90,"nodeType":"188","messageId":"189","endLine":244,"endColumn":112},{"ruleId":"186","severity":1,"message":"187","line":246,"column":89,"nodeType":"188","messageId":"189","endLine":246,"endColumn":111},{"ruleId":"186","severity":1,"message":"187","line":306,"column":63,"nodeType":"188","messageId":"189","endLine":306,"endColumn":85},{"ruleId":"186","severity":1,"message":"187","line":308,"column":62,"nodeType":"188","messageId":"189","endLine":308,"endColumn":84},{"ruleId":"179","severity":1,"message":"180","line":880,"column":23,"nodeType":"181","endLine":880,"endColumn":93},{"ruleId":"182","severity":1,"message":"183","line":968,"column":21,"nodeType":"181","endLine":968,"endColumn":68},{"ruleId":"182","severity":1,"message":"183","line":974,"column":83,"nodeType":"181","endLine":974,"endColumn":139},{"ruleId":"179","severity":1,"message":"180","line":484,"column":15,"nodeType":"181","endLine":484,"endColumn":85},{"ruleId":"163","severity":1,"message":"190","line":1,"column":27,"nodeType":"165","messageId":"166","endLine":1,"endColumn":36},{"ruleId":"163","severity":1,"message":"191","line":2,"column":59,"nodeType":"165","messageId":"166","endLine":2,"endColumn":67},{"ruleId":"163","severity":1,"message":"192","line":2,"column":69,"nodeType":"165","messageId":"166","endLine":2,"endColumn":78},{"ruleId":"163","severity":1,"message":"193","line":2,"column":80,"nodeType":"165","messageId":"166","endLine":2,"endColumn":84},{"ruleId":"163","severity":1,"message":"194","line":18,"column":10,"nodeType":"165","messageId":"166","endLine":18,"endColumn":14},{"ruleId":"163","severity":1,"message":"195","line":18,"column":16,"nodeType":"165","messageId":"166","endLine":18,"endColumn":23},"no-unused-vars","'getBrandText' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["196"],"no-negated-in-lhs",["197"],"no-undef","'$' is not defined.","undef","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.SKU'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'setdefault' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","Assignments to the 'd' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'CardText' is defined but never used.","'CardTitle' is defined but never used.","'Card' is defined but never used.","'salt' is assigned a value but never used.","'setsalt' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},"Update the dependencies array to be: [props.match.params.SKU]",{"range":"201","text":"202"},[6302,6304],"[props.match.params.SKU]"]